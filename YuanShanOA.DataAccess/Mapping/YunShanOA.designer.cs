#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.235
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace YunShanOA.DataAccess.Mapping
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="YunShanOA")]
	public partial class YunShanOADataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertActivities(Activities instance);
    partial void UpdateActivities(Activities instance);
    partial void DeleteActivities(Activities instance);
    partial void InsertArchiveMeeting(ArchiveMeeting instance);
    partial void UpdateArchiveMeeting(ArchiveMeeting instance);
    partial void DeleteArchiveMeeting(ArchiveMeeting instance);
    partial void InsertArchiveUserCarApply(ArchiveUserCarApply instance);
    partial void UpdateArchiveUserCarApply(ArchiveUserCarApply instance);
    partial void DeleteArchiveUserCarApply(ArchiveUserCarApply instance);
    partial void Insertaspnet_Applications(aspnet_Applications instance);
    partial void Updateaspnet_Applications(aspnet_Applications instance);
    partial void Deleteaspnet_Applications(aspnet_Applications instance);
    partial void Insertaspnet_Membership(aspnet_Membership instance);
    partial void Updateaspnet_Membership(aspnet_Membership instance);
    partial void Deleteaspnet_Membership(aspnet_Membership instance);
    partial void Insertaspnet_Paths(aspnet_Paths instance);
    partial void Updateaspnet_Paths(aspnet_Paths instance);
    partial void Deleteaspnet_Paths(aspnet_Paths instance);
    partial void Insertaspnet_PersonalizationAllUsers(aspnet_PersonalizationAllUsers instance);
    partial void Updateaspnet_PersonalizationAllUsers(aspnet_PersonalizationAllUsers instance);
    partial void Deleteaspnet_PersonalizationAllUsers(aspnet_PersonalizationAllUsers instance);
    partial void Insertaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
    partial void Updateaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
    partial void Deleteaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
    partial void Insertaspnet_Profile(aspnet_Profile instance);
    partial void Updateaspnet_Profile(aspnet_Profile instance);
    partial void Deleteaspnet_Profile(aspnet_Profile instance);
    partial void Insertaspnet_Roles(aspnet_Roles instance);
    partial void Updateaspnet_Roles(aspnet_Roles instance);
    partial void Deleteaspnet_Roles(aspnet_Roles instance);
    partial void Insertaspnet_SchemaVersions(aspnet_SchemaVersions instance);
    partial void Updateaspnet_SchemaVersions(aspnet_SchemaVersions instance);
    partial void Deleteaspnet_SchemaVersions(aspnet_SchemaVersions instance);
    partial void InsertAspNet_SqlCacheTablesForChangeNotification(AspNet_SqlCacheTablesForChangeNotification instance);
    partial void UpdateAspNet_SqlCacheTablesForChangeNotification(AspNet_SqlCacheTablesForChangeNotification instance);
    partial void DeleteAspNet_SqlCacheTablesForChangeNotification(AspNet_SqlCacheTablesForChangeNotification instance);
    partial void Insertaspnet_Users(aspnet_Users instance);
    partial void Updateaspnet_Users(aspnet_Users instance);
    partial void Deleteaspnet_Users(aspnet_Users instance);
    partial void Insertaspnet_UsersInRoles(aspnet_UsersInRoles instance);
    partial void Updateaspnet_UsersInRoles(aspnet_UsersInRoles instance);
    partial void Deleteaspnet_UsersInRoles(aspnet_UsersInRoles instance);
    partial void Insertaspnet_WebEvent_Events(aspnet_WebEvent_Events instance);
    partial void Updateaspnet_WebEvent_Events(aspnet_WebEvent_Events instance);
    partial void Deleteaspnet_WebEvent_Events(aspnet_WebEvent_Events instance);
    partial void InsertAutomobile(Automobile instance);
    partial void UpdateAutomobile(Automobile instance);
    partial void DeleteAutomobile(Automobile instance);
    partial void InsertAutomobileUse(AutomobileUse instance);
    partial void UpdateAutomobileUse(AutomobileUse instance);
    partial void DeleteAutomobileUse(AutomobileUse instance);
    partial void InsertAutomobileUseForm(AutomobileUseForm instance);
    partial void UpdateAutomobileUseForm(AutomobileUseForm instance);
    partial void DeleteAutomobileUseForm(AutomobileUseForm instance);
    partial void InsertAutomobileUser(AutomobileUser instance);
    partial void UpdateAutomobileUser(AutomobileUser instance);
    partial void DeleteAutomobileUser(AutomobileUser instance);
    partial void InsertCar(Car instance);
    partial void UpdateCar(Car instance);
    partial void DeleteCar(Car instance);
    partial void InsertDocumentProcessAct(DocumentProcessAct instance);
    partial void UpdateDocumentProcessAct(DocumentProcessAct instance);
    partial void DeleteDocumentProcessAct(DocumentProcessAct instance);
    partial void InsertDocumentTemplate(DocumentTemplate instance);
    partial void UpdateDocumentTemplate(DocumentTemplate instance);
    partial void DeleteDocumentTemplate(DocumentTemplate instance);
    partial void InsertLog(Log instance);
    partial void UpdateLog(Log instance);
    partial void DeleteLog(Log instance);
    partial void InsertMeetingAndEquipment(MeetingAndEquipment instance);
    partial void UpdateMeetingAndEquipment(MeetingAndEquipment instance);
    partial void DeleteMeetingAndEquipment(MeetingAndEquipment instance);
    partial void InsertMeetingAndRoom(MeetingAndRoom instance);
    partial void UpdateMeetingAndRoom(MeetingAndRoom instance);
    partial void DeleteMeetingAndRoom(MeetingAndRoom instance);
    partial void InsertMeetingAndUser(MeetingAndUser instance);
    partial void UpdateMeetingAndUser(MeetingAndUser instance);
    partial void DeleteMeetingAndUser(MeetingAndUser instance);
    partial void InsertMeetingEquipment(MeetingEquipment instance);
    partial void UpdateMeetingEquipment(MeetingEquipment instance);
    partial void DeleteMeetingEquipment(MeetingEquipment instance);
    partial void InsertMeetingParticipationMember(MeetingParticipationMember instance);
    partial void UpdateMeetingParticipationMember(MeetingParticipationMember instance);
    partial void DeleteMeetingParticipationMember(MeetingParticipationMember instance);
    partial void InsertMeetingRoom(MeetingRoom instance);
    partial void UpdateMeetingRoom(MeetingRoom instance);
    partial void DeleteMeetingRoom(MeetingRoom instance);
    partial void InsertMeetingType(MeetingType instance);
    partial void UpdateMeetingType(MeetingType instance);
    partial void DeleteMeetingType(MeetingType instance);
    partial void InsertMegApplyForm(MegApplyForm instance);
    partial void UpdateMegApplyForm(MegApplyForm instance);
    partial void DeleteMegApplyForm(MegApplyForm instance);
    partial void InsertReviewAutoApply(ReviewAutoApply instance);
    partial void UpdateReviewAutoApply(ReviewAutoApply instance);
    partial void DeleteReviewAutoApply(ReviewAutoApply instance);
    partial void InsertReviewMeetingApply(ReviewMeetingApply instance);
    partial void UpdateReviewMeetingApply(ReviewMeetingApply instance);
    partial void DeleteReviewMeetingApply(ReviewMeetingApply instance);
    partial void InsertReviewUseCarApply(ReviewUseCarApply instance);
    partial void UpdateReviewUseCarApply(ReviewUseCarApply instance);
    partial void DeleteReviewUseCarApply(ReviewUseCarApply instance);
    partial void InsertUseCarAndUser(UseCarAndUser instance);
    partial void UpdateUseCarAndUser(UseCarAndUser instance);
    partial void DeleteUseCarAndUser(UseCarAndUser instance);
    partial void InsertUseCarApplyForm(UseCarApplyForm instance);
    partial void UpdateUseCarApplyForm(UseCarApplyForm instance);
    partial void DeleteUseCarApplyForm(UseCarApplyForm instance);
    partial void InsertUseCarType(UseCarType instance);
    partial void UpdateUseCarType(UseCarType instance);
    partial void DeleteUseCarType(UseCarType instance);
    partial void InsertWFT_Acts(WFT_Acts instance);
    partial void UpdateWFT_Acts(WFT_Acts instance);
    partial void DeleteWFT_Acts(WFT_Acts instance);
    partial void InsertWorkFlow_Acts(WorkFlow_Acts instance);
    partial void UpdateWorkFlow_Acts(WorkFlow_Acts instance);
    partial void DeleteWorkFlow_Acts(WorkFlow_Acts instance);
    partial void InsertWorkflows(Workflows instance);
    partial void UpdateWorkflows(Workflows instance);
    partial void DeleteWorkflows(Workflows instance);
    partial void InsertMeetingApplyForm(MeetingApplyForm instance);
    partial void UpdateMeetingApplyForm(MeetingApplyForm instance);
    partial void DeleteMeetingApplyForm(MeetingApplyForm instance);
    partial void InsertDocument(Document instance);
    partial void UpdateDocument(Document instance);
    partial void DeleteDocument(Document instance);
    #endregion
		
		public YunShanOADataContext() : 
				base(global::YunShanOA.DataAccess.Properties.Settings.Default.YunShanOAConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public YunShanOADataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public YunShanOADataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public YunShanOADataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public YunShanOADataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Activities> Activities
		{
			get
			{
				return this.GetTable<Activities>();
			}
		}
		
		public System.Data.Linq.Table<WorkflowTemplates> WorkflowTemplates
		{
			get
			{
				return this.GetTable<WorkflowTemplates>();
			}
		}
		
		public System.Data.Linq.Table<ArchiveMeeting> ArchiveMeeting
		{
			get
			{
				return this.GetTable<ArchiveMeeting>();
			}
		}
		
		public System.Data.Linq.Table<ArchiveUserCarApply> ArchiveUserCarApply
		{
			get
			{
				return this.GetTable<ArchiveUserCarApply>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Applications> aspnet_Applications
		{
			get
			{
				return this.GetTable<aspnet_Applications>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Membership> aspnet_Membership
		{
			get
			{
				return this.GetTable<aspnet_Membership>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Paths> aspnet_Paths
		{
			get
			{
				return this.GetTable<aspnet_Paths>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_PersonalizationAllUsers> aspnet_PersonalizationAllUsers
		{
			get
			{
				return this.GetTable<aspnet_PersonalizationAllUsers>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUser
		{
			get
			{
				return this.GetTable<aspnet_PersonalizationPerUser>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Profile> aspnet_Profile
		{
			get
			{
				return this.GetTable<aspnet_Profile>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Roles> aspnet_Roles
		{
			get
			{
				return this.GetTable<aspnet_Roles>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_SchemaVersions> aspnet_SchemaVersions
		{
			get
			{
				return this.GetTable<aspnet_SchemaVersions>();
			}
		}
		
		public System.Data.Linq.Table<AspNet_SqlCacheTablesForChangeNotification> AspNet_SqlCacheTablesForChangeNotification
		{
			get
			{
				return this.GetTable<AspNet_SqlCacheTablesForChangeNotification>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Users> aspnet_Users
		{
			get
			{
				return this.GetTable<aspnet_Users>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_UsersInRoles> aspnet_UsersInRoles
		{
			get
			{
				return this.GetTable<aspnet_UsersInRoles>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_WebEvent_Events> aspnet_WebEvent_Events
		{
			get
			{
				return this.GetTable<aspnet_WebEvent_Events>();
			}
		}
		
		public System.Data.Linq.Table<Automobile> Automobile
		{
			get
			{
				return this.GetTable<Automobile>();
			}
		}
		
		public System.Data.Linq.Table<AutomobileUse> AutomobileUse
		{
			get
			{
				return this.GetTable<AutomobileUse>();
			}
		}
		
		public System.Data.Linq.Table<AutomobileUseForm> AutomobileUseForm
		{
			get
			{
				return this.GetTable<AutomobileUseForm>();
			}
		}
		
		public System.Data.Linq.Table<AutomobileUser> AutomobileUser
		{
			get
			{
				return this.GetTable<AutomobileUser>();
			}
		}
		
		public System.Data.Linq.Table<Car> Car
		{
			get
			{
				return this.GetTable<Car>();
			}
		}
		
		public System.Data.Linq.Table<DocumentAndWFT> DocumentAndWFT
		{
			get
			{
				return this.GetTable<DocumentAndWFT>();
			}
		}
		
		public System.Data.Linq.Table<DocumentProcessAct> DocumentProcessAct
		{
			get
			{
				return this.GetTable<DocumentProcessAct>();
			}
		}
		
		public System.Data.Linq.Table<DocumentTemplate> DocumentTemplate
		{
			get
			{
				return this.GetTable<DocumentTemplate>();
			}
		}
		
		public System.Data.Linq.Table<Log> Log
		{
			get
			{
				return this.GetTable<Log>();
			}
		}
		
		public System.Data.Linq.Table<MeetingAndEquipment> MeetingAndEquipment
		{
			get
			{
				return this.GetTable<MeetingAndEquipment>();
			}
		}
		
		public System.Data.Linq.Table<MeetingAndRoom> MeetingAndRoom
		{
			get
			{
				return this.GetTable<MeetingAndRoom>();
			}
		}
		
		public System.Data.Linq.Table<MeetingAndUser> MeetingAndUser
		{
			get
			{
				return this.GetTable<MeetingAndUser>();
			}
		}
		
		public System.Data.Linq.Table<MeetingEquipment> MeetingEquipment
		{
			get
			{
				return this.GetTable<MeetingEquipment>();
			}
		}
		
		public System.Data.Linq.Table<MeetingParticipationMember> MeetingParticipationMember
		{
			get
			{
				return this.GetTable<MeetingParticipationMember>();
			}
		}
		
		public System.Data.Linq.Table<MeetingRoom> MeetingRoom
		{
			get
			{
				return this.GetTable<MeetingRoom>();
			}
		}
		
		public System.Data.Linq.Table<MeetingType> MeetingType
		{
			get
			{
				return this.GetTable<MeetingType>();
			}
		}
		
		public System.Data.Linq.Table<MegApplyForm> MegApplyForm
		{
			get
			{
				return this.GetTable<MegApplyForm>();
			}
		}
		
		public System.Data.Linq.Table<ReviewAutoApply> ReviewAutoApply
		{
			get
			{
				return this.GetTable<ReviewAutoApply>();
			}
		}
		
		public System.Data.Linq.Table<ReviewMeetingApply> ReviewMeetingApply
		{
			get
			{
				return this.GetTable<ReviewMeetingApply>();
			}
		}
		
		public System.Data.Linq.Table<ReviewUseCarApply> ReviewUseCarApply
		{
			get
			{
				return this.GetTable<ReviewUseCarApply>();
			}
		}
		
		public System.Data.Linq.Table<UseCarAndUser> UseCarAndUser
		{
			get
			{
				return this.GetTable<UseCarAndUser>();
			}
		}
		
		public System.Data.Linq.Table<UseCarApplyForm> UseCarApplyForm
		{
			get
			{
				return this.GetTable<UseCarApplyForm>();
			}
		}
		
		public System.Data.Linq.Table<UseCarType> UseCarType
		{
			get
			{
				return this.GetTable<UseCarType>();
			}
		}
		
		public System.Data.Linq.Table<WFT_Acts> WFT_Acts
		{
			get
			{
				return this.GetTable<WFT_Acts>();
			}
		}
		
		public System.Data.Linq.Table<WFTActivities> WFTActivities
		{
			get
			{
				return this.GetTable<WFTActivities>();
			}
		}
		
		public System.Data.Linq.Table<WorkFlow_Acts> WorkFlow_Acts
		{
			get
			{
				return this.GetTable<WorkFlow_Acts>();
			}
		}
		
		public System.Data.Linq.Table<Workflows> Workflows
		{
			get
			{
				return this.GetTable<Workflows>();
			}
		}
		
		public System.Data.Linq.Table<MeetingApplyForm> MeetingApplyForm
		{
			get
			{
				return this.GetTable<MeetingApplyForm>();
			}
		}
		
		public System.Data.Linq.Table<Document> Document
		{
			get
			{
				return this.GetTable<Document>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Activities")]
	public partial class Activities : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ActID;
		
		private System.Nullable<System.Guid> _ACTTempID;
		
		private string _ActName;
		
		private System.Nullable<System.Guid> _WFID;
		
		private string _Owners;
		
		private string _LastUpdateUser;
		
		private System.Nullable<System.DateTime> _LastUpdateTime;
		
		private System.Nullable<int> _Status;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActIDChanging(System.Guid value);
    partial void OnActIDChanged();
    partial void OnACTTempIDChanging(System.Nullable<System.Guid> value);
    partial void OnACTTempIDChanged();
    partial void OnActNameChanging(string value);
    partial void OnActNameChanged();
    partial void OnWFIDChanging(System.Nullable<System.Guid> value);
    partial void OnWFIDChanged();
    partial void OnOwnersChanging(string value);
    partial void OnOwnersChanged();
    partial void OnLastUpdateUserChanging(string value);
    partial void OnLastUpdateUserChanged();
    partial void OnLastUpdateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateTimeChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    #endregion
		
		public Activities()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ActID
		{
			get
			{
				return this._ActID;
			}
			set
			{
				if ((this._ActID != value))
				{
					this.OnActIDChanging(value);
					this.SendPropertyChanging();
					this._ActID = value;
					this.SendPropertyChanged("ActID");
					this.OnActIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTTempID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ACTTempID
		{
			get
			{
				return this._ACTTempID;
			}
			set
			{
				if ((this._ACTTempID != value))
				{
					this.OnACTTempIDChanging(value);
					this.SendPropertyChanging();
					this._ACTTempID = value;
					this.SendPropertyChanged("ACTTempID");
					this.OnACTTempIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActName", DbType="NVarChar(50)")]
		public string ActName
		{
			get
			{
				return this._ActName;
			}
			set
			{
				if ((this._ActName != value))
				{
					this.OnActNameChanging(value);
					this.SendPropertyChanging();
					this._ActName = value;
					this.SendPropertyChanged("ActName");
					this.OnActNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> WFID
		{
			get
			{
				return this._WFID;
			}
			set
			{
				if ((this._WFID != value))
				{
					this.OnWFIDChanging(value);
					this.SendPropertyChanging();
					this._WFID = value;
					this.SendPropertyChanged("WFID");
					this.OnWFIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owners", DbType="NVarChar(50)")]
		public string Owners
		{
			get
			{
				return this._Owners;
			}
			set
			{
				if ((this._Owners != value))
				{
					this.OnOwnersChanging(value);
					this.SendPropertyChanging();
					this._Owners = value;
					this.SendPropertyChanged("Owners");
					this.OnOwnersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateUser", DbType="NVarChar(50)")]
		public string LastUpdateUser
		{
			get
			{
				return this._LastUpdateUser;
			}
			set
			{
				if ((this._LastUpdateUser != value))
				{
					this.OnLastUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateUser = value;
					this.SendPropertyChanged("LastUpdateUser");
					this.OnLastUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateTime
		{
			get
			{
				return this._LastUpdateTime;
			}
			set
			{
				if ((this._LastUpdateTime != value))
				{
					this.OnLastUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateTime = value;
					this.SendPropertyChanged("LastUpdateTime");
					this.OnLastUpdateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkflowTemplates")]
	public partial class WorkflowTemplates
	{
		
		private System.Guid _WFTID;
		
		private string _WFTName;
		
		public WorkflowTemplates()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFTID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid WFTID
		{
			get
			{
				return this._WFTID;
			}
			set
			{
				if ((this._WFTID != value))
				{
					this._WFTID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFTName", DbType="NVarChar(50)")]
		public string WFTName
		{
			get
			{
				return this._WFTName;
			}
			set
			{
				if ((this._WFTName != value))
				{
					this._WFTName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ArchiveMeeting")]
	public partial class ArchiveMeeting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ArchiveMeetingID;
		
		private int _MeetingApplyFormID;
		
		private string _FileName;
		
		private string _FilePath;
		
		private EntityRef<MeetingApplyForm> _MeetingApplyForm;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArchiveMeetingIDChanging(int value);
    partial void OnArchiveMeetingIDChanged();
    partial void OnMeetingApplyFormIDChanging(int value);
    partial void OnMeetingApplyFormIDChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    #endregion
		
		public ArchiveMeeting()
		{
			this._MeetingApplyForm = default(EntityRef<MeetingApplyForm>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArchiveMeetingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ArchiveMeetingID
		{
			get
			{
				return this._ArchiveMeetingID;
			}
			set
			{
				if ((this._ArchiveMeetingID != value))
				{
					this.OnArchiveMeetingIDChanging(value);
					this.SendPropertyChanging();
					this._ArchiveMeetingID = value;
					this.SendPropertyChanged("ArchiveMeetingID");
					this.OnArchiveMeetingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingApplyFormID", DbType="Int NOT NULL")]
		public int MeetingApplyFormID
		{
			get
			{
				return this._MeetingApplyFormID;
			}
			set
			{
				if ((this._MeetingApplyFormID != value))
				{
					if (this._MeetingApplyForm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMeetingApplyFormIDChanging(value);
					this.SendPropertyChanging();
					this._MeetingApplyFormID = value;
					this.SendPropertyChanged("MeetingApplyFormID");
					this.OnMeetingApplyFormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(1000)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilePath", DbType="NVarChar(1000)")]
		public string FilePath
		{
			get
			{
				return this._FilePath;
			}
			set
			{
				if ((this._FilePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._FilePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MeetingApplyForm_ArchiveMeeting", Storage="_MeetingApplyForm", ThisKey="MeetingApplyFormID", OtherKey="MeetingApplyFormID", IsForeignKey=true)]
		public MeetingApplyForm MeetingApplyForm
		{
			get
			{
				return this._MeetingApplyForm.Entity;
			}
			set
			{
				MeetingApplyForm previousValue = this._MeetingApplyForm.Entity;
				if (((previousValue != value) 
							|| (this._MeetingApplyForm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MeetingApplyForm.Entity = null;
						previousValue.ArchiveMeeting.Remove(this);
					}
					this._MeetingApplyForm.Entity = value;
					if ((value != null))
					{
						value.ArchiveMeeting.Add(this);
						this._MeetingApplyFormID = value.MeetingApplyFormID;
					}
					else
					{
						this._MeetingApplyFormID = default(int);
					}
					this.SendPropertyChanged("MeetingApplyForm");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ArchiveUserCarApply")]
	public partial class ArchiveUserCarApply : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ArchiveUserCarID;
		
		private int _UseCarApplyFormID;
		
		private string _FileName;
		
		private string _FilePath;
		
		private EntityRef<UseCarApplyForm> _UseCarApplyForm;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArchiveUserCarIDChanging(int value);
    partial void OnArchiveUserCarIDChanged();
    partial void OnUseCarApplyFormIDChanging(int value);
    partial void OnUseCarApplyFormIDChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    #endregion
		
		public ArchiveUserCarApply()
		{
			this._UseCarApplyForm = default(EntityRef<UseCarApplyForm>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArchiveUserCarID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ArchiveUserCarID
		{
			get
			{
				return this._ArchiveUserCarID;
			}
			set
			{
				if ((this._ArchiveUserCarID != value))
				{
					this.OnArchiveUserCarIDChanging(value);
					this.SendPropertyChanging();
					this._ArchiveUserCarID = value;
					this.SendPropertyChanged("ArchiveUserCarID");
					this.OnArchiveUserCarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseCarApplyFormID", DbType="Int NOT NULL")]
		public int UseCarApplyFormID
		{
			get
			{
				return this._UseCarApplyFormID;
			}
			set
			{
				if ((this._UseCarApplyFormID != value))
				{
					if (this._UseCarApplyForm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUseCarApplyFormIDChanging(value);
					this.SendPropertyChanging();
					this._UseCarApplyFormID = value;
					this.SendPropertyChanged("UseCarApplyFormID");
					this.OnUseCarApplyFormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilePath", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string FilePath
		{
			get
			{
				return this._FilePath;
			}
			set
			{
				if ((this._FilePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._FilePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UseCarApplyForm_ArchiveUserCarApply", Storage="_UseCarApplyForm", ThisKey="UseCarApplyFormID", OtherKey="UseCarApplyFormID", IsForeignKey=true)]
		public UseCarApplyForm UseCarApplyForm
		{
			get
			{
				return this._UseCarApplyForm.Entity;
			}
			set
			{
				UseCarApplyForm previousValue = this._UseCarApplyForm.Entity;
				if (((previousValue != value) 
							|| (this._UseCarApplyForm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UseCarApplyForm.Entity = null;
						previousValue.ArchiveUserCarApply.Remove(this);
					}
					this._UseCarApplyForm.Entity = value;
					if ((value != null))
					{
						value.ArchiveUserCarApply.Add(this);
						this._UseCarApplyFormID = value.UseCarApplyFormID;
					}
					else
					{
						this._UseCarApplyFormID = default(int);
					}
					this.SendPropertyChanged("UseCarApplyForm");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Applications")]
	public partial class aspnet_Applications : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ApplicationName;
		
		private string _LoweredApplicationName;
		
		private System.Guid _ApplicationId;
		
		private string _Description;
		
		private EntitySet<aspnet_Membership> _aspnet_Membership;
		
		private EntitySet<aspnet_Paths> _aspnet_Paths;
		
		private EntitySet<aspnet_Roles> _aspnet_Roles;
		
		private EntitySet<aspnet_Users> _aspnet_Users;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnLoweredApplicationNameChanging(string value);
    partial void OnLoweredApplicationNameChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Applications()
		{
			this._aspnet_Membership = new EntitySet<aspnet_Membership>(new Action<aspnet_Membership>(this.attach_aspnet_Membership), new Action<aspnet_Membership>(this.detach_aspnet_Membership));
			this._aspnet_Paths = new EntitySet<aspnet_Paths>(new Action<aspnet_Paths>(this.attach_aspnet_Paths), new Action<aspnet_Paths>(this.detach_aspnet_Paths));
			this._aspnet_Roles = new EntitySet<aspnet_Roles>(new Action<aspnet_Roles>(this.attach_aspnet_Roles), new Action<aspnet_Roles>(this.detach_aspnet_Roles));
			this._aspnet_Users = new EntitySet<aspnet_Users>(new Action<aspnet_Users>(this.attach_aspnet_Users), new Action<aspnet_Users>(this.detach_aspnet_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredApplicationName
		{
			get
			{
				return this._LoweredApplicationName;
			}
			set
			{
				if ((this._LoweredApplicationName != value))
				{
					this.OnLoweredApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredApplicationName = value;
					this.SendPropertyChanged("LoweredApplicationName");
					this.OnLoweredApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Applications_aspnet_Membership", Storage="_aspnet_Membership", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Membership> aspnet_Membership
		{
			get
			{
				return this._aspnet_Membership;
			}
			set
			{
				this._aspnet_Membership.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Applications_aspnet_Paths", Storage="_aspnet_Paths", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Paths> aspnet_Paths
		{
			get
			{
				return this._aspnet_Paths;
			}
			set
			{
				this._aspnet_Paths.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Applications_aspnet_Roles", Storage="_aspnet_Roles", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Roles> aspnet_Roles
		{
			get
			{
				return this._aspnet_Roles;
			}
			set
			{
				this._aspnet_Roles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Applications_aspnet_Users", Storage="_aspnet_Users", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Users> aspnet_Users
		{
			get
			{
				return this._aspnet_Users;
			}
			set
			{
				this._aspnet_Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_Membership(aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Applications = this;
		}
		
		private void detach_aspnet_Membership(aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Applications = null;
		}
		
		private void attach_aspnet_Paths(aspnet_Paths entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Applications = this;
		}
		
		private void detach_aspnet_Paths(aspnet_Paths entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Applications = null;
		}
		
		private void attach_aspnet_Roles(aspnet_Roles entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Applications = this;
		}
		
		private void detach_aspnet_Roles(aspnet_Roles entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Applications = null;
		}
		
		private void attach_aspnet_Users(aspnet_Users entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Applications = this;
		}
		
		private void detach_aspnet_Users(aspnet_Users entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Applications = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Membership")]
	public partial class aspnet_Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _Password;
		
		private int _PasswordFormat;
		
		private string _PasswordSalt;
		
		private string _MobilePIN;
		
		private string _Email;
		
		private string _LoweredEmail;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _IsApproved;
		
		private bool _IsLockedOut;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _LastPasswordChangedDate;
		
		private System.DateTime _LastLockoutDate;
		
		private int _FailedPasswordAttemptCount;
		
		private System.DateTime _FailedPasswordAttemptWindowStart;
		
		private int _FailedPasswordAnswerAttemptCount;
		
		private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
		
		private string _Comment;
		
		private EntityRef<aspnet_Applications> _aspnet_Applications;
		
		private EntityRef<aspnet_Users> _aspnet_Users;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnMobilePINChanging(string value);
    partial void OnMobilePINChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLoweredEmailChanging(string value);
    partial void OnLoweredEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public aspnet_Membership()
		{
			this._aspnet_Applications = default(EntityRef<aspnet_Applications>);
			this._aspnet_Users = default(EntityRef<aspnet_Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Applications.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFormat", DbType="Int NOT NULL")]
		public int PasswordFormat
		{
			get
			{
				return this._PasswordFormat;
			}
			set
			{
				if ((this._PasswordFormat != value))
				{
					this.OnPasswordFormatChanging(value);
					this.SendPropertyChanging();
					this._PasswordFormat = value;
					this.SendPropertyChanged("PasswordFormat");
					this.OnPasswordFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePIN", DbType="NVarChar(16)")]
		public string MobilePIN
		{
			get
			{
				return this._MobilePIN;
			}
			set
			{
				if ((this._MobilePIN != value))
				{
					this.OnMobilePINChanging(value);
					this.SendPropertyChanging();
					this._MobilePIN = value;
					this.SendPropertyChanged("MobilePIN");
					this.OnMobilePINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredEmail", DbType="NVarChar(256)")]
		public string LoweredEmail
		{
			get
			{
				return this._LoweredEmail;
			}
			set
			{
				if ((this._LoweredEmail != value))
				{
					this.OnLoweredEmailChanging(value);
					this.SendPropertyChanging();
					this._LoweredEmail = value;
					this.SendPropertyChanged("LoweredEmail");
					this.OnLoweredEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this.OnPasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestion = value;
					this.SendPropertyChanged("PasswordQuestion");
					this.OnPasswordQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this.OnPasswordAnswerChanging(value);
					this.SendPropertyChanging();
					this._PasswordAnswer = value;
					this.SendPropertyChanged("PasswordAnswer");
					this.OnPasswordAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this.OnIsLockedOutChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("IsLockedOut");
					this.OnIsLockedOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastPasswordChangedDate
		{
			get
			{
				return this._LastPasswordChangedDate;
			}
			set
			{
				if ((this._LastPasswordChangedDate != value))
				{
					this.OnLastPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChangedDate = value;
					this.SendPropertyChanged("LastPasswordChangedDate");
					this.OnLastPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLockoutDate
		{
			get
			{
				return this._LastLockoutDate;
			}
			set
			{
				if ((this._LastLockoutDate != value))
				{
					this.OnLastLockoutDateChanging(value);
					this.SendPropertyChanging();
					this._LastLockoutDate = value;
					this.SendPropertyChanged("LastLockoutDate");
					this.OnLastLockoutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAttemptCount
		{
			get
			{
				return this._FailedPasswordAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAttemptCount != value))
				{
					this.OnFailedPasswordAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAttemptCount");
					this.OnFailedPasswordAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAttemptWindowStart != value))
				{
					this.OnFailedPasswordAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
					this.OnFailedPasswordAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAnswerAttemptCount
		{
			get
			{
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptCount != value))
				{
					this.OnFailedPasswordAnswerAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
					this.OnFailedPasswordAnswerAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAnswerAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAnswerAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptWindowStart != value))
				{
					this.OnFailedPasswordAnswerAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
					this.OnFailedPasswordAnswerAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Applications_aspnet_Membership", Storage="_aspnet_Applications", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Applications aspnet_Applications
		{
			get
			{
				return this._aspnet_Applications.Entity;
			}
			set
			{
				aspnet_Applications previousValue = this._aspnet_Applications.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Applications.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Applications.Entity = null;
						previousValue.aspnet_Membership.Remove(this);
					}
					this._aspnet_Applications.Entity = value;
					if ((value != null))
					{
						value.aspnet_Membership.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Applications");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Users_aspnet_Membership", Storage="_aspnet_Users", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_Users aspnet_Users
		{
			get
			{
				return this._aspnet_Users.Entity;
			}
			set
			{
				aspnet_Users previousValue = this._aspnet_Users.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Users.Entity = null;
						previousValue.aspnet_Membership = null;
					}
					this._aspnet_Users.Entity = value;
					if ((value != null))
					{
						value.aspnet_Membership = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Paths")]
	public partial class aspnet_Paths : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _PathId;
		
		private string _Path;
		
		private string _LoweredPath;
		
		private EntityRef<aspnet_PersonalizationAllUsers> _aspnet_PersonalizationAllUsers;
		
		private EntitySet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUser;
		
		private EntityRef<aspnet_Applications> _aspnet_Applications;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnPathIdChanging(System.Guid value);
    partial void OnPathIdChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnLoweredPathChanging(string value);
    partial void OnLoweredPathChanged();
    #endregion
		
		public aspnet_Paths()
		{
			this._aspnet_PersonalizationAllUsers = default(EntityRef<aspnet_PersonalizationAllUsers>);
			this._aspnet_PersonalizationPerUser = new EntitySet<aspnet_PersonalizationPerUser>(new Action<aspnet_PersonalizationPerUser>(this.attach_aspnet_PersonalizationPerUser), new Action<aspnet_PersonalizationPerUser>(this.detach_aspnet_PersonalizationPerUser));
			this._aspnet_Applications = default(EntityRef<aspnet_Applications>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Applications.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredPath", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredPath
		{
			get
			{
				return this._LoweredPath;
			}
			set
			{
				if ((this._LoweredPath != value))
				{
					this.OnLoweredPathChanging(value);
					this.SendPropertyChanging();
					this._LoweredPath = value;
					this.SendPropertyChanged("LoweredPath");
					this.OnLoweredPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Paths_aspnet_PersonalizationAllUsers", Storage="_aspnet_PersonalizationAllUsers", ThisKey="PathId", OtherKey="PathId", IsUnique=true, IsForeignKey=false)]
		public aspnet_PersonalizationAllUsers aspnet_PersonalizationAllUsers
		{
			get
			{
				return this._aspnet_PersonalizationAllUsers.Entity;
			}
			set
			{
				aspnet_PersonalizationAllUsers previousValue = this._aspnet_PersonalizationAllUsers.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_PersonalizationAllUsers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_PersonalizationAllUsers.Entity = null;
						previousValue.aspnet_Paths = null;
					}
					this._aspnet_PersonalizationAllUsers.Entity = value;
					if ((value != null))
					{
						value.aspnet_Paths = this;
					}
					this.SendPropertyChanged("aspnet_PersonalizationAllUsers");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Paths_aspnet_PersonalizationPerUser", Storage="_aspnet_PersonalizationPerUser", ThisKey="PathId", OtherKey="PathId")]
		public EntitySet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUser
		{
			get
			{
				return this._aspnet_PersonalizationPerUser;
			}
			set
			{
				this._aspnet_PersonalizationPerUser.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Applications_aspnet_Paths", Storage="_aspnet_Applications", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Applications aspnet_Applications
		{
			get
			{
				return this._aspnet_Applications.Entity;
			}
			set
			{
				aspnet_Applications previousValue = this._aspnet_Applications.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Applications.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Applications.Entity = null;
						previousValue.aspnet_Paths.Remove(this);
					}
					this._aspnet_Applications.Entity = value;
					if ((value != null))
					{
						value.aspnet_Paths.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Applications");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Paths = this;
		}
		
		private void detach_aspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Paths = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_PersonalizationAllUsers")]
	public partial class aspnet_PersonalizationAllUsers : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PathId;
		
		private System.Data.Linq.Binary _PageSettings;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_Paths> _aspnet_Paths;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPathIdChanging(System.Guid value);
    partial void OnPathIdChanged();
    partial void OnPageSettingsChanging(System.Data.Linq.Binary value);
    partial void OnPageSettingsChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_PersonalizationAllUsers()
		{
			this._aspnet_Paths = default(EntityRef<aspnet_Paths>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					if (this._aspnet_Paths.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSettings", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PageSettings
		{
			get
			{
				return this._PageSettings;
			}
			set
			{
				if ((this._PageSettings != value))
				{
					this.OnPageSettingsChanging(value);
					this.SendPropertyChanging();
					this._PageSettings = value;
					this.SendPropertyChanged("PageSettings");
					this.OnPageSettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Paths_aspnet_PersonalizationAllUsers", Storage="_aspnet_Paths", ThisKey="PathId", OtherKey="PathId", IsForeignKey=true)]
		public aspnet_Paths aspnet_Paths
		{
			get
			{
				return this._aspnet_Paths.Entity;
			}
			set
			{
				aspnet_Paths previousValue = this._aspnet_Paths.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Paths.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Paths.Entity = null;
						previousValue.aspnet_PersonalizationAllUsers = null;
					}
					this._aspnet_Paths.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationAllUsers = this;
						this._PathId = value.PathId;
					}
					else
					{
						this._PathId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Paths");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_PersonalizationPerUser")]
	public partial class aspnet_PersonalizationPerUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _PathId;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Data.Linq.Binary _PageSettings;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_Paths> _aspnet_Paths;
		
		private EntityRef<aspnet_Users> _aspnet_Users;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnPathIdChanging(System.Nullable<System.Guid> value);
    partial void OnPathIdChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnPageSettingsChanging(System.Data.Linq.Binary value);
    partial void OnPageSettingsChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_PersonalizationPerUser()
		{
			this._aspnet_Paths = default(EntityRef<aspnet_Paths>);
			this._aspnet_Users = default(EntityRef<aspnet_Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					if (this._aspnet_Paths.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSettings", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PageSettings
		{
			get
			{
				return this._PageSettings;
			}
			set
			{
				if ((this._PageSettings != value))
				{
					this.OnPageSettingsChanging(value);
					this.SendPropertyChanging();
					this._PageSettings = value;
					this.SendPropertyChanged("PageSettings");
					this.OnPageSettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Paths_aspnet_PersonalizationPerUser", Storage="_aspnet_Paths", ThisKey="PathId", OtherKey="PathId", IsForeignKey=true)]
		public aspnet_Paths aspnet_Paths
		{
			get
			{
				return this._aspnet_Paths.Entity;
			}
			set
			{
				aspnet_Paths previousValue = this._aspnet_Paths.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Paths.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Paths.Entity = null;
						previousValue.aspnet_PersonalizationPerUser.Remove(this);
					}
					this._aspnet_Paths.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationPerUser.Add(this);
						this._PathId = value.PathId;
					}
					else
					{
						this._PathId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_Paths");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Users_aspnet_PersonalizationPerUser", Storage="_aspnet_Users", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_Users aspnet_Users
		{
			get
			{
				return this._aspnet_Users.Entity;
			}
			set
			{
				aspnet_Users previousValue = this._aspnet_Users.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Users.Entity = null;
						previousValue.aspnet_PersonalizationPerUser.Remove(this);
					}
					this._aspnet_Users.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationPerUser.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Profile")]
	public partial class aspnet_Profile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private string _PropertyNames;
		
		private string _PropertyValuesString;
		
		private System.Data.Linq.Binary _PropertyValuesBinary;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_Users> _aspnet_Users;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPropertyNamesChanging(string value);
    partial void OnPropertyNamesChanged();
    partial void OnPropertyValuesStringChanging(string value);
    partial void OnPropertyValuesStringChanged();
    partial void OnPropertyValuesBinaryChanging(System.Data.Linq.Binary value);
    partial void OnPropertyValuesBinaryChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_Profile()
		{
			this._aspnet_Users = default(EntityRef<aspnet_Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyNames", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PropertyNames
		{
			get
			{
				return this._PropertyNames;
			}
			set
			{
				if ((this._PropertyNames != value))
				{
					this.OnPropertyNamesChanging(value);
					this.SendPropertyChanging();
					this._PropertyNames = value;
					this.SendPropertyChanged("PropertyNames");
					this.OnPropertyNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesString", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PropertyValuesString
		{
			get
			{
				return this._PropertyValuesString;
			}
			set
			{
				if ((this._PropertyValuesString != value))
				{
					this.OnPropertyValuesStringChanging(value);
					this.SendPropertyChanging();
					this._PropertyValuesString = value;
					this.SendPropertyChanged("PropertyValuesString");
					this.OnPropertyValuesStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesBinary", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PropertyValuesBinary
		{
			get
			{
				return this._PropertyValuesBinary;
			}
			set
			{
				if ((this._PropertyValuesBinary != value))
				{
					this.OnPropertyValuesBinaryChanging(value);
					this.SendPropertyChanging();
					this._PropertyValuesBinary = value;
					this.SendPropertyChanged("PropertyValuesBinary");
					this.OnPropertyValuesBinaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Users_aspnet_Profile", Storage="_aspnet_Users", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_Users aspnet_Users
		{
			get
			{
				return this._aspnet_Users.Entity;
			}
			set
			{
				aspnet_Users previousValue = this._aspnet_Users.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Users.Entity = null;
						previousValue.aspnet_Profile = null;
					}
					this._aspnet_Users.Entity = value;
					if ((value != null))
					{
						value.aspnet_Profile = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Roles")]
	public partial class aspnet_Roles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _RoleId;
		
		private string _RoleName;
		
		private string _LoweredRoleName;
		
		private string _Description;
		
		private EntitySet<aspnet_UsersInRoles> _aspnet_UsersInRoles;
		
		private EntityRef<aspnet_Applications> _aspnet_Applications;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnLoweredRoleNameChanging(string value);
    partial void OnLoweredRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Roles()
		{
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRoles>(new Action<aspnet_UsersInRoles>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRoles>(this.detach_aspnet_UsersInRoles));
			this._aspnet_Applications = default(EntityRef<aspnet_Applications>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Applications.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredRoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredRoleName
		{
			get
			{
				return this._LoweredRoleName;
			}
			set
			{
				if ((this._LoweredRoleName != value))
				{
					this.OnLoweredRoleNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredRoleName = value;
					this.SendPropertyChanged("LoweredRoleName");
					this.OnLoweredRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Roles_aspnet_UsersInRoles", Storage="_aspnet_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<aspnet_UsersInRoles> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Applications_aspnet_Roles", Storage="_aspnet_Applications", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Applications aspnet_Applications
		{
			get
			{
				return this._aspnet_Applications.Entity;
			}
			set
			{
				aspnet_Applications previousValue = this._aspnet_Applications.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Applications.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Applications.Entity = null;
						previousValue.aspnet_Roles.Remove(this);
					}
					this._aspnet_Applications.Entity = value;
					if ((value != null))
					{
						value.aspnet_Roles.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Applications");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRoles entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Roles = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRoles entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Roles = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_SchemaVersions")]
	public partial class aspnet_SchemaVersions : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Feature;
		
		private string _CompatibleSchemaVersion;
		
		private bool _IsCurrentVersion;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeatureChanging(string value);
    partial void OnFeatureChanged();
    partial void OnCompatibleSchemaVersionChanging(string value);
    partial void OnCompatibleSchemaVersionChanged();
    partial void OnIsCurrentVersionChanging(bool value);
    partial void OnIsCurrentVersionChanged();
    #endregion
		
		public aspnet_SchemaVersions()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feature", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Feature
		{
			get
			{
				return this._Feature;
			}
			set
			{
				if ((this._Feature != value))
				{
					this.OnFeatureChanging(value);
					this.SendPropertyChanging();
					this._Feature = value;
					this.SendPropertyChanged("Feature");
					this.OnFeatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompatibleSchemaVersion", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CompatibleSchemaVersion
		{
			get
			{
				return this._CompatibleSchemaVersion;
			}
			set
			{
				if ((this._CompatibleSchemaVersion != value))
				{
					this.OnCompatibleSchemaVersionChanging(value);
					this.SendPropertyChanging();
					this._CompatibleSchemaVersion = value;
					this.SendPropertyChanged("CompatibleSchemaVersion");
					this.OnCompatibleSchemaVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCurrentVersion", DbType="Bit NOT NULL")]
		public bool IsCurrentVersion
		{
			get
			{
				return this._IsCurrentVersion;
			}
			set
			{
				if ((this._IsCurrentVersion != value))
				{
					this.OnIsCurrentVersionChanging(value);
					this.SendPropertyChanging();
					this._IsCurrentVersion = value;
					this.SendPropertyChanged("IsCurrentVersion");
					this.OnIsCurrentVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNet_SqlCacheTablesForChangeNotification")]
	public partial class AspNet_SqlCacheTablesForChangeNotification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _tableName;
		
		private System.DateTime _notificationCreated;
		
		private int _changeId;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntableNameChanging(string value);
    partial void OntableNameChanged();
    partial void OnnotificationCreatedChanging(System.DateTime value);
    partial void OnnotificationCreatedChanged();
    partial void OnchangeIdChanging(int value);
    partial void OnchangeIdChanged();
    #endregion
		
		public AspNet_SqlCacheTablesForChangeNotification()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tableName", DbType="NVarChar(450) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string tableName
		{
			get
			{
				return this._tableName;
			}
			set
			{
				if ((this._tableName != value))
				{
					this.OntableNameChanging(value);
					this.SendPropertyChanging();
					this._tableName = value;
					this.SendPropertyChanged("tableName");
					this.OntableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notificationCreated", DbType="DateTime NOT NULL")]
		public System.DateTime notificationCreated
		{
			get
			{
				return this._notificationCreated;
			}
			set
			{
				if ((this._notificationCreated != value))
				{
					this.OnnotificationCreatedChanging(value);
					this.SendPropertyChanging();
					this._notificationCreated = value;
					this.SendPropertyChanged("notificationCreated");
					this.OnnotificationCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_changeId", DbType="Int NOT NULL")]
		public int changeId
		{
			get
			{
				return this._changeId;
			}
			set
			{
				if ((this._changeId != value))
				{
					this.OnchangeIdChanging(value);
					this.SendPropertyChanging();
					this._changeId = value;
					this.SendPropertyChanged("changeId");
					this.OnchangeIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Users")]
	public partial class aspnet_Users : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		private EntityRef<aspnet_Membership> _aspnet_Membership;
		
		private EntitySet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUser;
		
		private EntityRef<aspnet_Profile> _aspnet_Profile;
		
		private EntitySet<aspnet_UsersInRoles> _aspnet_UsersInRoles;
		
		private EntityRef<aspnet_Applications> _aspnet_Applications;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
		
		public aspnet_Users()
		{
			this._aspnet_Membership = default(EntityRef<aspnet_Membership>);
			this._aspnet_PersonalizationPerUser = new EntitySet<aspnet_PersonalizationPerUser>(new Action<aspnet_PersonalizationPerUser>(this.attach_aspnet_PersonalizationPerUser), new Action<aspnet_PersonalizationPerUser>(this.detach_aspnet_PersonalizationPerUser));
			this._aspnet_Profile = default(EntityRef<aspnet_Profile>);
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRoles>(new Action<aspnet_UsersInRoles>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRoles>(this.detach_aspnet_UsersInRoles));
			this._aspnet_Applications = default(EntityRef<aspnet_Applications>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Applications.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredUserName
		{
			get
			{
				return this._LoweredUserName;
			}
			set
			{
				if ((this._LoweredUserName != value))
				{
					this.OnLoweredUserNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredUserName = value;
					this.SendPropertyChanged("LoweredUserName");
					this.OnLoweredUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this.OnMobileAliasChanging(value);
					this.SendPropertyChanging();
					this._MobileAlias = value;
					this.SendPropertyChanged("MobileAlias");
					this.OnMobileAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Users_aspnet_Membership", Storage="_aspnet_Membership", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Membership aspnet_Membership
		{
			get
			{
				return this._aspnet_Membership.Entity;
			}
			set
			{
				aspnet_Membership previousValue = this._aspnet_Membership.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Membership.Entity = null;
						previousValue.aspnet_Users = null;
					}
					this._aspnet_Membership.Entity = value;
					if ((value != null))
					{
						value.aspnet_Users = this;
					}
					this.SendPropertyChanged("aspnet_Membership");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Users_aspnet_PersonalizationPerUser", Storage="_aspnet_PersonalizationPerUser", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUser
		{
			get
			{
				return this._aspnet_PersonalizationPerUser;
			}
			set
			{
				this._aspnet_PersonalizationPerUser.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Users_aspnet_Profile", Storage="_aspnet_Profile", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Profile aspnet_Profile
		{
			get
			{
				return this._aspnet_Profile.Entity;
			}
			set
			{
				aspnet_Profile previousValue = this._aspnet_Profile.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Profile.Entity = null;
						previousValue.aspnet_Users = null;
					}
					this._aspnet_Profile.Entity = value;
					if ((value != null))
					{
						value.aspnet_Users = this;
					}
					this.SendPropertyChanged("aspnet_Profile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Users_aspnet_UsersInRoles", Storage="_aspnet_UsersInRoles", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<aspnet_UsersInRoles> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Applications_aspnet_Users", Storage="_aspnet_Applications", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Applications aspnet_Applications
		{
			get
			{
				return this._aspnet_Applications.Entity;
			}
			set
			{
				aspnet_Applications previousValue = this._aspnet_Applications.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Applications.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Applications.Entity = null;
						previousValue.aspnet_Users.Remove(this);
					}
					this._aspnet_Applications.Entity = value;
					if ((value != null))
					{
						value.aspnet_Users.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Applications");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Users = this;
		}
		
		private void detach_aspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Users = null;
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRoles entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Users = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRoles entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Users = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_UsersInRoles")]
	public partial class aspnet_UsersInRoles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Guid _RoleId;
		
		private EntityRef<aspnet_Roles> _aspnet_Roles;
		
		private EntityRef<aspnet_Users> _aspnet_Users;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
		
		public aspnet_UsersInRoles()
		{
			this._aspnet_Roles = default(EntityRef<aspnet_Roles>);
			this._aspnet_Users = default(EntityRef<aspnet_Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._aspnet_Roles.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Roles_aspnet_UsersInRoles", Storage="_aspnet_Roles", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public aspnet_Roles aspnet_Roles
		{
			get
			{
				return this._aspnet_Roles.Entity;
			}
			set
			{
				aspnet_Roles previousValue = this._aspnet_Roles.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Roles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Roles.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_Roles.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Roles");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Users_aspnet_UsersInRoles", Storage="_aspnet_Users", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_Users aspnet_Users
		{
			get
			{
				return this._aspnet_Users.Entity;
			}
			set
			{
				aspnet_Users previousValue = this._aspnet_Users.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Users.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_Users.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_WebEvent_Events")]
	public partial class aspnet_WebEvent_Events : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EventId;
		
		private System.DateTime _EventTimeUtc;
		
		private System.DateTime _EventTime;
		
		private string _EventType;
		
		private decimal _EventSequence;
		
		private decimal _EventOccurrence;
		
		private int _EventCode;
		
		private int _EventDetailCode;
		
		private string _Message;
		
		private string _ApplicationPath;
		
		private string _ApplicationVirtualPath;
		
		private string _MachineName;
		
		private string _RequestUrl;
		
		private string _ExceptionType;
		
		private string _Details;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIdChanging(string value);
    partial void OnEventIdChanged();
    partial void OnEventTimeUtcChanging(System.DateTime value);
    partial void OnEventTimeUtcChanged();
    partial void OnEventTimeChanging(System.DateTime value);
    partial void OnEventTimeChanged();
    partial void OnEventTypeChanging(string value);
    partial void OnEventTypeChanged();
    partial void OnEventSequenceChanging(decimal value);
    partial void OnEventSequenceChanged();
    partial void OnEventOccurrenceChanging(decimal value);
    partial void OnEventOccurrenceChanged();
    partial void OnEventCodeChanging(int value);
    partial void OnEventCodeChanged();
    partial void OnEventDetailCodeChanging(int value);
    partial void OnEventDetailCodeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnApplicationPathChanging(string value);
    partial void OnApplicationPathChanged();
    partial void OnApplicationVirtualPathChanging(string value);
    partial void OnApplicationVirtualPathChanged();
    partial void OnMachineNameChanging(string value);
    partial void OnMachineNameChanged();
    partial void OnRequestUrlChanging(string value);
    partial void OnRequestUrlChanged();
    partial void OnExceptionTypeChanging(string value);
    partial void OnExceptionTypeChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    #endregion
		
		public aspnet_WebEvent_Events()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventId", DbType="Char(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EventId
		{
			get
			{
				return this._EventId;
			}
			set
			{
				if ((this._EventId != value))
				{
					this.OnEventIdChanging(value);
					this.SendPropertyChanging();
					this._EventId = value;
					this.SendPropertyChanged("EventId");
					this.OnEventIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTimeUtc", DbType="DateTime NOT NULL")]
		public System.DateTime EventTimeUtc
		{
			get
			{
				return this._EventTimeUtc;
			}
			set
			{
				if ((this._EventTimeUtc != value))
				{
					this.OnEventTimeUtcChanging(value);
					this.SendPropertyChanging();
					this._EventTimeUtc = value;
					this.SendPropertyChanged("EventTimeUtc");
					this.OnEventTimeUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTime", DbType="DateTime NOT NULL")]
		public System.DateTime EventTime
		{
			get
			{
				return this._EventTime;
			}
			set
			{
				if ((this._EventTime != value))
				{
					this.OnEventTimeChanging(value);
					this.SendPropertyChanging();
					this._EventTime = value;
					this.SendPropertyChanged("EventTime");
					this.OnEventTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventType", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string EventType
		{
			get
			{
				return this._EventType;
			}
			set
			{
				if ((this._EventType != value))
				{
					this.OnEventTypeChanging(value);
					this.SendPropertyChanging();
					this._EventType = value;
					this.SendPropertyChanged("EventType");
					this.OnEventTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventSequence", DbType="Decimal(19,0) NOT NULL")]
		public decimal EventSequence
		{
			get
			{
				return this._EventSequence;
			}
			set
			{
				if ((this._EventSequence != value))
				{
					this.OnEventSequenceChanging(value);
					this.SendPropertyChanging();
					this._EventSequence = value;
					this.SendPropertyChanged("EventSequence");
					this.OnEventSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventOccurrence", DbType="Decimal(19,0) NOT NULL")]
		public decimal EventOccurrence
		{
			get
			{
				return this._EventOccurrence;
			}
			set
			{
				if ((this._EventOccurrence != value))
				{
					this.OnEventOccurrenceChanging(value);
					this.SendPropertyChanging();
					this._EventOccurrence = value;
					this.SendPropertyChanged("EventOccurrence");
					this.OnEventOccurrenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventCode", DbType="Int NOT NULL")]
		public int EventCode
		{
			get
			{
				return this._EventCode;
			}
			set
			{
				if ((this._EventCode != value))
				{
					this.OnEventCodeChanging(value);
					this.SendPropertyChanging();
					this._EventCode = value;
					this.SendPropertyChanged("EventCode");
					this.OnEventCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDetailCode", DbType="Int NOT NULL")]
		public int EventDetailCode
		{
			get
			{
				return this._EventDetailCode;
			}
			set
			{
				if ((this._EventDetailCode != value))
				{
					this.OnEventDetailCodeChanging(value);
					this.SendPropertyChanging();
					this._EventDetailCode = value;
					this.SendPropertyChanged("EventDetailCode");
					this.OnEventDetailCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(1024)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationPath", DbType="NVarChar(256)")]
		public string ApplicationPath
		{
			get
			{
				return this._ApplicationPath;
			}
			set
			{
				if ((this._ApplicationPath != value))
				{
					this.OnApplicationPathChanging(value);
					this.SendPropertyChanging();
					this._ApplicationPath = value;
					this.SendPropertyChanged("ApplicationPath");
					this.OnApplicationPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationVirtualPath", DbType="NVarChar(256)")]
		public string ApplicationVirtualPath
		{
			get
			{
				return this._ApplicationVirtualPath;
			}
			set
			{
				if ((this._ApplicationVirtualPath != value))
				{
					this.OnApplicationVirtualPathChanging(value);
					this.SendPropertyChanging();
					this._ApplicationVirtualPath = value;
					this.SendPropertyChanged("ApplicationVirtualPath");
					this.OnApplicationVirtualPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string MachineName
		{
			get
			{
				return this._MachineName;
			}
			set
			{
				if ((this._MachineName != value))
				{
					this.OnMachineNameChanging(value);
					this.SendPropertyChanging();
					this._MachineName = value;
					this.SendPropertyChanged("MachineName");
					this.OnMachineNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestUrl", DbType="NVarChar(1024)")]
		public string RequestUrl
		{
			get
			{
				return this._RequestUrl;
			}
			set
			{
				if ((this._RequestUrl != value))
				{
					this.OnRequestUrlChanging(value);
					this.SendPropertyChanging();
					this._RequestUrl = value;
					this.SendPropertyChanged("RequestUrl");
					this.OnRequestUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionType", DbType="NVarChar(256)")]
		public string ExceptionType
		{
			get
			{
				return this._ExceptionType;
			}
			set
			{
				if ((this._ExceptionType != value))
				{
					this.OnExceptionTypeChanging(value);
					this.SendPropertyChanging();
					this._ExceptionType = value;
					this.SendPropertyChanged("ExceptionType");
					this.OnExceptionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Automobile")]
	public partial class Automobile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AutomobileID;
		
		private string _Driver;
		
		private string _AutomobileLicensePlace;
		
		private string _AutomobileType;
		
		private int _AutomobileSeatings;
		
		private int _AutomobileCapacity;
		
		private int _AutomobileStatus;
		
		private string _Comments;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAutomobileIDChanging(int value);
    partial void OnAutomobileIDChanged();
    partial void OnDriverChanging(string value);
    partial void OnDriverChanged();
    partial void OnAutomobileLicensePlaceChanging(string value);
    partial void OnAutomobileLicensePlaceChanged();
    partial void OnAutomobileTypeChanging(string value);
    partial void OnAutomobileTypeChanged();
    partial void OnAutomobileSeatingsChanging(int value);
    partial void OnAutomobileSeatingsChanged();
    partial void OnAutomobileCapacityChanging(int value);
    partial void OnAutomobileCapacityChanged();
    partial void OnAutomobileStatusChanging(int value);
    partial void OnAutomobileStatusChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    #endregion
		
		public Automobile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutomobileID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AutomobileID
		{
			get
			{
				return this._AutomobileID;
			}
			set
			{
				if ((this._AutomobileID != value))
				{
					this.OnAutomobileIDChanging(value);
					this.SendPropertyChanging();
					this._AutomobileID = value;
					this.SendPropertyChanged("AutomobileID");
					this.OnAutomobileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Driver", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string Driver
		{
			get
			{
				return this._Driver;
			}
			set
			{
				if ((this._Driver != value))
				{
					this.OnDriverChanging(value);
					this.SendPropertyChanging();
					this._Driver = value;
					this.SendPropertyChanged("Driver");
					this.OnDriverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutomobileLicensePlace", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string AutomobileLicensePlace
		{
			get
			{
				return this._AutomobileLicensePlace;
			}
			set
			{
				if ((this._AutomobileLicensePlace != value))
				{
					this.OnAutomobileLicensePlaceChanging(value);
					this.SendPropertyChanging();
					this._AutomobileLicensePlace = value;
					this.SendPropertyChanged("AutomobileLicensePlace");
					this.OnAutomobileLicensePlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutomobileType", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string AutomobileType
		{
			get
			{
				return this._AutomobileType;
			}
			set
			{
				if ((this._AutomobileType != value))
				{
					this.OnAutomobileTypeChanging(value);
					this.SendPropertyChanging();
					this._AutomobileType = value;
					this.SendPropertyChanged("AutomobileType");
					this.OnAutomobileTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutomobileSeatings", DbType="Int NOT NULL")]
		public int AutomobileSeatings
		{
			get
			{
				return this._AutomobileSeatings;
			}
			set
			{
				if ((this._AutomobileSeatings != value))
				{
					this.OnAutomobileSeatingsChanging(value);
					this.SendPropertyChanging();
					this._AutomobileSeatings = value;
					this.SendPropertyChanged("AutomobileSeatings");
					this.OnAutomobileSeatingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutomobileCapacity", DbType="Int NOT NULL")]
		public int AutomobileCapacity
		{
			get
			{
				return this._AutomobileCapacity;
			}
			set
			{
				if ((this._AutomobileCapacity != value))
				{
					this.OnAutomobileCapacityChanging(value);
					this.SendPropertyChanging();
					this._AutomobileCapacity = value;
					this.SendPropertyChanged("AutomobileCapacity");
					this.OnAutomobileCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutomobileStatus", DbType="Int NOT NULL")]
		public int AutomobileStatus
		{
			get
			{
				return this._AutomobileStatus;
			}
			set
			{
				if ((this._AutomobileStatus != value))
				{
					this.OnAutomobileStatusChanging(value);
					this.SendPropertyChanging();
					this._AutomobileStatus = value;
					this.SendPropertyChanged("AutomobileStatus");
					this.OnAutomobileStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AutomobileUse")]
	public partial class AutomobileUse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AutomobileUseID;
		
		private int _AutomobileUseFormID;
		
		private int _AutomobileID;
		
		private EntityRef<AutomobileUseForm> _AutomobileUseForm;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAutomobileUseIDChanging(int value);
    partial void OnAutomobileUseIDChanged();
    partial void OnAutomobileUseFormIDChanging(int value);
    partial void OnAutomobileUseFormIDChanged();
    partial void OnAutomobileIDChanging(int value);
    partial void OnAutomobileIDChanged();
    #endregion
		
		public AutomobileUse()
		{
			this._AutomobileUseForm = default(EntityRef<AutomobileUseForm>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutomobileUseID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AutomobileUseID
		{
			get
			{
				return this._AutomobileUseID;
			}
			set
			{
				if ((this._AutomobileUseID != value))
				{
					this.OnAutomobileUseIDChanging(value);
					this.SendPropertyChanging();
					this._AutomobileUseID = value;
					this.SendPropertyChanged("AutomobileUseID");
					this.OnAutomobileUseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutomobileUseFormID", DbType="Int NOT NULL")]
		public int AutomobileUseFormID
		{
			get
			{
				return this._AutomobileUseFormID;
			}
			set
			{
				if ((this._AutomobileUseFormID != value))
				{
					if (this._AutomobileUseForm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAutomobileUseFormIDChanging(value);
					this.SendPropertyChanging();
					this._AutomobileUseFormID = value;
					this.SendPropertyChanged("AutomobileUseFormID");
					this.OnAutomobileUseFormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutomobileID", DbType="Int NOT NULL")]
		public int AutomobileID
		{
			get
			{
				return this._AutomobileID;
			}
			set
			{
				if ((this._AutomobileID != value))
				{
					this.OnAutomobileIDChanging(value);
					this.SendPropertyChanging();
					this._AutomobileID = value;
					this.SendPropertyChanged("AutomobileID");
					this.OnAutomobileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AutomobileUseForm_AutomobileUse", Storage="_AutomobileUseForm", ThisKey="AutomobileUseFormID", OtherKey="AutomobileUserFormID", IsForeignKey=true)]
		public AutomobileUseForm AutomobileUseForm
		{
			get
			{
				return this._AutomobileUseForm.Entity;
			}
			set
			{
				AutomobileUseForm previousValue = this._AutomobileUseForm.Entity;
				if (((previousValue != value) 
							|| (this._AutomobileUseForm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AutomobileUseForm.Entity = null;
						previousValue.AutomobileUse.Remove(this);
					}
					this._AutomobileUseForm.Entity = value;
					if ((value != null))
					{
						value.AutomobileUse.Add(this);
						this._AutomobileUseFormID = value.AutomobileUserFormID;
					}
					else
					{
						this._AutomobileUseFormID = default(int);
					}
					this.SendPropertyChanged("AutomobileUseForm");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AutomobileUseForm")]
	public partial class AutomobileUseForm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AutomobileUserFormID;
		
		private string _BeginAddress;
		
		private string _EndAddress;
		
		private System.DateTime _BeginTime;
		
		private System.DateTime _EndTime;
		
		private string _UserName;
		
		private int _Status;
		
		private string _Purpose;
		
		private EntitySet<AutomobileUse> _AutomobileUse;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAutomobileUserFormIDChanging(int value);
    partial void OnAutomobileUserFormIDChanged();
    partial void OnBeginAddressChanging(string value);
    partial void OnBeginAddressChanged();
    partial void OnEndAddressChanging(string value);
    partial void OnEndAddressChanged();
    partial void OnBeginTimeChanging(System.DateTime value);
    partial void OnBeginTimeChanged();
    partial void OnEndTimeChanging(System.DateTime value);
    partial void OnEndTimeChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnPurposeChanging(string value);
    partial void OnPurposeChanged();
    #endregion
		
		public AutomobileUseForm()
		{
			this._AutomobileUse = new EntitySet<AutomobileUse>(new Action<AutomobileUse>(this.attach_AutomobileUse), new Action<AutomobileUse>(this.detach_AutomobileUse));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutomobileUserFormID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AutomobileUserFormID
		{
			get
			{
				return this._AutomobileUserFormID;
			}
			set
			{
				if ((this._AutomobileUserFormID != value))
				{
					this.OnAutomobileUserFormIDChanging(value);
					this.SendPropertyChanging();
					this._AutomobileUserFormID = value;
					this.SendPropertyChanged("AutomobileUserFormID");
					this.OnAutomobileUserFormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeginAddress", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string BeginAddress
		{
			get
			{
				return this._BeginAddress;
			}
			set
			{
				if ((this._BeginAddress != value))
				{
					this.OnBeginAddressChanging(value);
					this.SendPropertyChanging();
					this._BeginAddress = value;
					this.SendPropertyChanged("BeginAddress");
					this.OnBeginAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndAddress", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string EndAddress
		{
			get
			{
				return this._EndAddress;
			}
			set
			{
				if ((this._EndAddress != value))
				{
					this.OnEndAddressChanging(value);
					this.SendPropertyChanging();
					this._EndAddress = value;
					this.SendPropertyChanged("EndAddress");
					this.OnEndAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeginTime", DbType="DateTime NOT NULL")]
		public System.DateTime BeginTime
		{
			get
			{
				return this._BeginTime;
			}
			set
			{
				if ((this._BeginTime != value))
				{
					this.OnBeginTimeChanging(value);
					this.SendPropertyChanging();
					this._BeginTime = value;
					this.SendPropertyChanged("BeginTime");
					this.OnBeginTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Purpose", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string Purpose
		{
			get
			{
				return this._Purpose;
			}
			set
			{
				if ((this._Purpose != value))
				{
					this.OnPurposeChanging(value);
					this.SendPropertyChanging();
					this._Purpose = value;
					this.SendPropertyChanged("Purpose");
					this.OnPurposeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AutomobileUseForm_AutomobileUse", Storage="_AutomobileUse", ThisKey="AutomobileUserFormID", OtherKey="AutomobileUseFormID")]
		public EntitySet<AutomobileUse> AutomobileUse
		{
			get
			{
				return this._AutomobileUse;
			}
			set
			{
				this._AutomobileUse.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AutomobileUse(AutomobileUse entity)
		{
			this.SendPropertyChanging();
			entity.AutomobileUseForm = this;
		}
		
		private void detach_AutomobileUse(AutomobileUse entity)
		{
			this.SendPropertyChanging();
			entity.AutomobileUseForm = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AutomobileUser")]
	public partial class AutomobileUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AutomobileUserID;
		
		private string _UserName;
		
		private int _AutomobileUseFormID;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAutomobileUserIDChanging(int value);
    partial void OnAutomobileUserIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnAutomobileUseFormIDChanging(int value);
    partial void OnAutomobileUseFormIDChanged();
    #endregion
		
		public AutomobileUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutomobileUserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AutomobileUserID
		{
			get
			{
				return this._AutomobileUserID;
			}
			set
			{
				if ((this._AutomobileUserID != value))
				{
					this.OnAutomobileUserIDChanging(value);
					this.SendPropertyChanging();
					this._AutomobileUserID = value;
					this.SendPropertyChanged("AutomobileUserID");
					this.OnAutomobileUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutomobileUseFormID", DbType="Int NOT NULL")]
		public int AutomobileUseFormID
		{
			get
			{
				return this._AutomobileUseFormID;
			}
			set
			{
				if ((this._AutomobileUseFormID != value))
				{
					this.OnAutomobileUseFormIDChanging(value);
					this.SendPropertyChanging();
					this._AutomobileUseFormID = value;
					this.SendPropertyChanged("AutomobileUseFormID");
					this.OnAutomobileUseFormIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Car")]
	public partial class Car : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CarId;
		
		private int _UseCarTypeID;
		
		private string _DriverEmail;
		
		private string _Driver;
		
		private string _LicenseNumber;
		
		private string _ModelNumber;
		
		private int _SeatingNumber;
		
		private int _Status;
		
		private string _LoadCapacity;
		
		private string _Comment;
		
		private EntityRef<UseCarType> _UseCarType;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCarIdChanging(int value);
    partial void OnCarIdChanged();
    partial void OnUseCarTypeIDChanging(int value);
    partial void OnUseCarTypeIDChanged();
    partial void OnDriverEmailChanging(string value);
    partial void OnDriverEmailChanged();
    partial void OnDriverChanging(string value);
    partial void OnDriverChanged();
    partial void OnLicenseNumberChanging(string value);
    partial void OnLicenseNumberChanged();
    partial void OnModelNumberChanging(string value);
    partial void OnModelNumberChanged();
    partial void OnSeatingNumberChanging(int value);
    partial void OnSeatingNumberChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnLoadCapacityChanging(string value);
    partial void OnLoadCapacityChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public Car()
		{
			this._UseCarType = default(EntityRef<UseCarType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CarId
		{
			get
			{
				return this._CarId;
			}
			set
			{
				if ((this._CarId != value))
				{
					this.OnCarIdChanging(value);
					this.SendPropertyChanging();
					this._CarId = value;
					this.SendPropertyChanged("CarId");
					this.OnCarIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseCarTypeID", DbType="Int NOT NULL")]
		public int UseCarTypeID
		{
			get
			{
				return this._UseCarTypeID;
			}
			set
			{
				if ((this._UseCarTypeID != value))
				{
					if (this._UseCarType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUseCarTypeIDChanging(value);
					this.SendPropertyChanging();
					this._UseCarTypeID = value;
					this.SendPropertyChanged("UseCarTypeID");
					this.OnUseCarTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DriverEmail", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DriverEmail
		{
			get
			{
				return this._DriverEmail;
			}
			set
			{
				if ((this._DriverEmail != value))
				{
					this.OnDriverEmailChanging(value);
					this.SendPropertyChanging();
					this._DriverEmail = value;
					this.SendPropertyChanged("DriverEmail");
					this.OnDriverEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Driver", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Driver
		{
			get
			{
				return this._Driver;
			}
			set
			{
				if ((this._Driver != value))
				{
					this.OnDriverChanging(value);
					this.SendPropertyChanging();
					this._Driver = value;
					this.SendPropertyChanged("Driver");
					this.OnDriverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LicenseNumber
		{
			get
			{
				return this._LicenseNumber;
			}
			set
			{
				if ((this._LicenseNumber != value))
				{
					this.OnLicenseNumberChanging(value);
					this.SendPropertyChanging();
					this._LicenseNumber = value;
					this.SendPropertyChanged("LicenseNumber");
					this.OnLicenseNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ModelNumber
		{
			get
			{
				return this._ModelNumber;
			}
			set
			{
				if ((this._ModelNumber != value))
				{
					this.OnModelNumberChanging(value);
					this.SendPropertyChanging();
					this._ModelNumber = value;
					this.SendPropertyChanged("ModelNumber");
					this.OnModelNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeatingNumber", DbType="Int NOT NULL")]
		public int SeatingNumber
		{
			get
			{
				return this._SeatingNumber;
			}
			set
			{
				if ((this._SeatingNumber != value))
				{
					this.OnSeatingNumberChanging(value);
					this.SendPropertyChanging();
					this._SeatingNumber = value;
					this.SendPropertyChanged("SeatingNumber");
					this.OnSeatingNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoadCapacity", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string LoadCapacity
		{
			get
			{
				return this._LoadCapacity;
			}
			set
			{
				if ((this._LoadCapacity != value))
				{
					this.OnLoadCapacityChanging(value);
					this.SendPropertyChanging();
					this._LoadCapacity = value;
					this.SendPropertyChanged("LoadCapacity");
					this.OnLoadCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(200)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UseCarType_Car", Storage="_UseCarType", ThisKey="UseCarTypeID", OtherKey="UseCarTypeID", IsForeignKey=true)]
		public UseCarType UseCarType
		{
			get
			{
				return this._UseCarType.Entity;
			}
			set
			{
				UseCarType previousValue = this._UseCarType.Entity;
				if (((previousValue != value) 
							|| (this._UseCarType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UseCarType.Entity = null;
						previousValue.Car.Remove(this);
					}
					this._UseCarType.Entity = value;
					if ((value != null))
					{
						value.Car.Add(this);
						this._UseCarTypeID = value.UseCarTypeID;
					}
					else
					{
						this._UseCarTypeID = default(int);
					}
					this.SendPropertyChanged("UseCarType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentAndWFT")]
	public partial class DocumentAndWFT
	{
		
		private System.Guid _WFTID;
		
		private int _DocumentTemplateID;
		
		private string _WFTDescription;
		
		public DocumentAndWFT()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFTID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid WFTID
		{
			get
			{
				return this._WFTID;
			}
			set
			{
				if ((this._WFTID != value))
				{
					this._WFTID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentTemplateID", DbType="Int NOT NULL")]
		public int DocumentTemplateID
		{
			get
			{
				return this._DocumentTemplateID;
			}
			set
			{
				if ((this._DocumentTemplateID != value))
				{
					this._DocumentTemplateID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFTDescription", DbType="NVarChar(400)")]
		public string WFTDescription
		{
			get
			{
				return this._WFTDescription;
			}
			set
			{
				if ((this._WFTDescription != value))
				{
					this._WFTDescription = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentProcessAct")]
	public partial class DocumentProcessAct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _NodeGuid;
		
		private string _nodeName;
		
		private string _nodeRoles;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNodeGuidChanging(System.Guid value);
    partial void OnNodeGuidChanged();
    partial void OnnodeNameChanging(string value);
    partial void OnnodeNameChanged();
    partial void OnnodeRolesChanging(string value);
    partial void OnnodeRolesChanged();
    #endregion
		
		public DocumentProcessAct()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NodeGuid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid NodeGuid
		{
			get
			{
				return this._NodeGuid;
			}
			set
			{
				if ((this._NodeGuid != value))
				{
					this.OnNodeGuidChanging(value);
					this.SendPropertyChanging();
					this._NodeGuid = value;
					this.SendPropertyChanged("NodeGuid");
					this.OnNodeGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nodeName", DbType="NVarChar(50)")]
		public string nodeName
		{
			get
			{
				return this._nodeName;
			}
			set
			{
				if ((this._nodeName != value))
				{
					this.OnnodeNameChanging(value);
					this.SendPropertyChanging();
					this._nodeName = value;
					this.SendPropertyChanged("nodeName");
					this.OnnodeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nodeRoles", DbType="NVarChar(50)")]
		public string nodeRoles
		{
			get
			{
				return this._nodeRoles;
			}
			set
			{
				if ((this._nodeRoles != value))
				{
					this.OnnodeRolesChanging(value);
					this.SendPropertyChanging();
					this._nodeRoles = value;
					this.SendPropertyChanged("nodeRoles");
					this.OnnodeRolesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentTemplate")]
	public partial class DocumentTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocumentTemplateID;
		
		private string _DocumentTemplateName;
		
		private string _DocumentTemplateDescription;
		
		private string _DocumentTemplatePath;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocumentTemplateIDChanging(int value);
    partial void OnDocumentTemplateIDChanged();
    partial void OnDocumentTemplateNameChanging(string value);
    partial void OnDocumentTemplateNameChanged();
    partial void OnDocumentTemplateDescriptionChanging(string value);
    partial void OnDocumentTemplateDescriptionChanged();
    partial void OnDocumentTemplatePathChanging(string value);
    partial void OnDocumentTemplatePathChanged();
    #endregion
		
		public DocumentTemplate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentTemplateID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DocumentTemplateID
		{
			get
			{
				return this._DocumentTemplateID;
			}
			set
			{
				if ((this._DocumentTemplateID != value))
				{
					this.OnDocumentTemplateIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentTemplateID = value;
					this.SendPropertyChanged("DocumentTemplateID");
					this.OnDocumentTemplateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentTemplateName", DbType="NVarChar(50)")]
		public string DocumentTemplateName
		{
			get
			{
				return this._DocumentTemplateName;
			}
			set
			{
				if ((this._DocumentTemplateName != value))
				{
					this.OnDocumentTemplateNameChanging(value);
					this.SendPropertyChanging();
					this._DocumentTemplateName = value;
					this.SendPropertyChanged("DocumentTemplateName");
					this.OnDocumentTemplateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentTemplateDescription", DbType="NVarChar(400)")]
		public string DocumentTemplateDescription
		{
			get
			{
				return this._DocumentTemplateDescription;
			}
			set
			{
				if ((this._DocumentTemplateDescription != value))
				{
					this.OnDocumentTemplateDescriptionChanging(value);
					this.SendPropertyChanging();
					this._DocumentTemplateDescription = value;
					this.SendPropertyChanged("DocumentTemplateDescription");
					this.OnDocumentTemplateDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentTemplatePath", DbType="NVarChar(100)")]
		public string DocumentTemplatePath
		{
			get
			{
				return this._DocumentTemplatePath;
			}
			set
			{
				if ((this._DocumentTemplatePath != value))
				{
					this.OnDocumentTemplatePathChanging(value);
					this.SendPropertyChanging();
					this._DocumentTemplatePath = value;
					this.SendPropertyChanged("DocumentTemplatePath");
					this.OnDocumentTemplatePathChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Log]")]
	public partial class Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogID;
		
		private string _UserName;
		
		private string _LogType;
		
		private string _LogContent;
		
		private System.Nullable<System.DateTime> _LogTime;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogIDChanging(int value);
    partial void OnLogIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLogTypeChanging(string value);
    partial void OnLogTypeChanged();
    partial void OnLogContentChanging(string value);
    partial void OnLogContentChanged();
    partial void OnLogTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLogTimeChanged();
    #endregion
		
		public Log()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LogID
		{
			get
			{
				return this._LogID;
			}
			set
			{
				if ((this._LogID != value))
				{
					this.OnLogIDChanging(value);
					this.SendPropertyChanging();
					this._LogID = value;
					this.SendPropertyChanged("LogID");
					this.OnLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogType", DbType="VarChar(50)")]
		public string LogType
		{
			get
			{
				return this._LogType;
			}
			set
			{
				if ((this._LogType != value))
				{
					this.OnLogTypeChanging(value);
					this.SendPropertyChanging();
					this._LogType = value;
					this.SendPropertyChanged("LogType");
					this.OnLogTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogContent", DbType="VarChar(1000)")]
		public string LogContent
		{
			get
			{
				return this._LogContent;
			}
			set
			{
				if ((this._LogContent != value))
				{
					this.OnLogContentChanging(value);
					this.SendPropertyChanging();
					this._LogContent = value;
					this.SendPropertyChanged("LogContent");
					this.OnLogContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LogTime
		{
			get
			{
				return this._LogTime;
			}
			set
			{
				if ((this._LogTime != value))
				{
					this.OnLogTimeChanging(value);
					this.SendPropertyChanging();
					this._LogTime = value;
					this.SendPropertyChanged("LogTime");
					this.OnLogTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MeetingAndEquipment")]
	public partial class MeetingAndEquipment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MeetingAndEquipmentID;
		
		private int _MeetingApplyFormID;
		
		private int _MeetingEquipmentID;
		
		private int _MeetingEquipmentCount;
		
		private EntityRef<MeetingEquipment> _MeetingEquipment;
		
		private EntityRef<MeetingApplyForm> _MeetingApplyForm;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMeetingAndEquipmentIDChanging(int value);
    partial void OnMeetingAndEquipmentIDChanged();
    partial void OnMeetingApplyFormIDChanging(int value);
    partial void OnMeetingApplyFormIDChanged();
    partial void OnMeetingEquipmentIDChanging(int value);
    partial void OnMeetingEquipmentIDChanged();
    partial void OnMeetingEquipmentCountChanging(int value);
    partial void OnMeetingEquipmentCountChanged();
    #endregion
		
		public MeetingAndEquipment()
		{
			this._MeetingEquipment = default(EntityRef<MeetingEquipment>);
			this._MeetingApplyForm = default(EntityRef<MeetingApplyForm>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingAndEquipmentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MeetingAndEquipmentID
		{
			get
			{
				return this._MeetingAndEquipmentID;
			}
			set
			{
				if ((this._MeetingAndEquipmentID != value))
				{
					this.OnMeetingAndEquipmentIDChanging(value);
					this.SendPropertyChanging();
					this._MeetingAndEquipmentID = value;
					this.SendPropertyChanged("MeetingAndEquipmentID");
					this.OnMeetingAndEquipmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingApplyFormID", DbType="Int NOT NULL")]
		public int MeetingApplyFormID
		{
			get
			{
				return this._MeetingApplyFormID;
			}
			set
			{
				if ((this._MeetingApplyFormID != value))
				{
					if (this._MeetingApplyForm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMeetingApplyFormIDChanging(value);
					this.SendPropertyChanging();
					this._MeetingApplyFormID = value;
					this.SendPropertyChanged("MeetingApplyFormID");
					this.OnMeetingApplyFormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingEquipmentID", DbType="Int NOT NULL")]
		public int MeetingEquipmentID
		{
			get
			{
				return this._MeetingEquipmentID;
			}
			set
			{
				if ((this._MeetingEquipmentID != value))
				{
					if (this._MeetingEquipment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMeetingEquipmentIDChanging(value);
					this.SendPropertyChanging();
					this._MeetingEquipmentID = value;
					this.SendPropertyChanged("MeetingEquipmentID");
					this.OnMeetingEquipmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingEquipmentCount", DbType="Int NOT NULL")]
		public int MeetingEquipmentCount
		{
			get
			{
				return this._MeetingEquipmentCount;
			}
			set
			{
				if ((this._MeetingEquipmentCount != value))
				{
					this.OnMeetingEquipmentCountChanging(value);
					this.SendPropertyChanging();
					this._MeetingEquipmentCount = value;
					this.SendPropertyChanged("MeetingEquipmentCount");
					this.OnMeetingEquipmentCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MeetingEquipment_MeetingAndEquipment", Storage="_MeetingEquipment", ThisKey="MeetingEquipmentID", OtherKey="MeetingEquipmentID", IsForeignKey=true)]
		public MeetingEquipment MeetingEquipment
		{
			get
			{
				return this._MeetingEquipment.Entity;
			}
			set
			{
				MeetingEquipment previousValue = this._MeetingEquipment.Entity;
				if (((previousValue != value) 
							|| (this._MeetingEquipment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MeetingEquipment.Entity = null;
						previousValue.MeetingAndEquipment.Remove(this);
					}
					this._MeetingEquipment.Entity = value;
					if ((value != null))
					{
						value.MeetingAndEquipment.Add(this);
						this._MeetingEquipmentID = value.MeetingEquipmentID;
					}
					else
					{
						this._MeetingEquipmentID = default(int);
					}
					this.SendPropertyChanged("MeetingEquipment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MeetingApplyForm_MeetingAndEquipment", Storage="_MeetingApplyForm", ThisKey="MeetingApplyFormID", OtherKey="MeetingApplyFormID", IsForeignKey=true)]
		public MeetingApplyForm MeetingApplyForm
		{
			get
			{
				return this._MeetingApplyForm.Entity;
			}
			set
			{
				MeetingApplyForm previousValue = this._MeetingApplyForm.Entity;
				if (((previousValue != value) 
							|| (this._MeetingApplyForm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MeetingApplyForm.Entity = null;
						previousValue.MeetingAndEquipment.Remove(this);
					}
					this._MeetingApplyForm.Entity = value;
					if ((value != null))
					{
						value.MeetingAndEquipment.Add(this);
						this._MeetingApplyFormID = value.MeetingApplyFormID;
					}
					else
					{
						this._MeetingApplyFormID = default(int);
					}
					this.SendPropertyChanged("MeetingApplyForm");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MeetingAndRoom")]
	public partial class MeetingAndRoom : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MeetingAndRoomID;
		
		private int _MeetingApplyFormID;
		
		private int _MeetingRoomID;
		
		private int _Status;
		
		private EntityRef<MeetingRoom> _MeetingRoom;
		
		private EntityRef<MeetingApplyForm> _MeetingApplyForm;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMeetingAndRoomIDChanging(int value);
    partial void OnMeetingAndRoomIDChanged();
    partial void OnMeetingApplyFormIDChanging(int value);
    partial void OnMeetingApplyFormIDChanged();
    partial void OnMeetingRoomIDChanging(int value);
    partial void OnMeetingRoomIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public MeetingAndRoom()
		{
			this._MeetingRoom = default(EntityRef<MeetingRoom>);
			this._MeetingApplyForm = default(EntityRef<MeetingApplyForm>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingAndRoomID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MeetingAndRoomID
		{
			get
			{
				return this._MeetingAndRoomID;
			}
			set
			{
				if ((this._MeetingAndRoomID != value))
				{
					this.OnMeetingAndRoomIDChanging(value);
					this.SendPropertyChanging();
					this._MeetingAndRoomID = value;
					this.SendPropertyChanged("MeetingAndRoomID");
					this.OnMeetingAndRoomIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingApplyFormID", DbType="Int NOT NULL")]
		public int MeetingApplyFormID
		{
			get
			{
				return this._MeetingApplyFormID;
			}
			set
			{
				if ((this._MeetingApplyFormID != value))
				{
					if (this._MeetingApplyForm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMeetingApplyFormIDChanging(value);
					this.SendPropertyChanging();
					this._MeetingApplyFormID = value;
					this.SendPropertyChanged("MeetingApplyFormID");
					this.OnMeetingApplyFormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingRoomID", DbType="Int NOT NULL")]
		public int MeetingRoomID
		{
			get
			{
				return this._MeetingRoomID;
			}
			set
			{
				if ((this._MeetingRoomID != value))
				{
					if (this._MeetingRoom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMeetingRoomIDChanging(value);
					this.SendPropertyChanging();
					this._MeetingRoomID = value;
					this.SendPropertyChanged("MeetingRoomID");
					this.OnMeetingRoomIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MeetingRoom_MeetingAndRoom", Storage="_MeetingRoom", ThisKey="MeetingRoomID", OtherKey="MeetingRoomID", IsForeignKey=true)]
		public MeetingRoom MeetingRoom
		{
			get
			{
				return this._MeetingRoom.Entity;
			}
			set
			{
				MeetingRoom previousValue = this._MeetingRoom.Entity;
				if (((previousValue != value) 
							|| (this._MeetingRoom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MeetingRoom.Entity = null;
						previousValue.MeetingAndRoom.Remove(this);
					}
					this._MeetingRoom.Entity = value;
					if ((value != null))
					{
						value.MeetingAndRoom.Add(this);
						this._MeetingRoomID = value.MeetingRoomID;
					}
					else
					{
						this._MeetingRoomID = default(int);
					}
					this.SendPropertyChanged("MeetingRoom");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MeetingApplyForm_MeetingAndRoom", Storage="_MeetingApplyForm", ThisKey="MeetingApplyFormID", OtherKey="MeetingApplyFormID", IsForeignKey=true)]
		public MeetingApplyForm MeetingApplyForm
		{
			get
			{
				return this._MeetingApplyForm.Entity;
			}
			set
			{
				MeetingApplyForm previousValue = this._MeetingApplyForm.Entity;
				if (((previousValue != value) 
							|| (this._MeetingApplyForm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MeetingApplyForm.Entity = null;
						previousValue.MeetingAndRoom.Remove(this);
					}
					this._MeetingApplyForm.Entity = value;
					if ((value != null))
					{
						value.MeetingAndRoom.Add(this);
						this._MeetingApplyFormID = value.MeetingApplyFormID;
					}
					else
					{
						this._MeetingApplyFormID = default(int);
					}
					this.SendPropertyChanged("MeetingApplyForm");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MeetingAndUser")]
	public partial class MeetingAndUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MeetingAndUserID;
		
		private string _UserName;
		
		private int _MeetingApplyFormID;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMeetingAndUserIDChanging(int value);
    partial void OnMeetingAndUserIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnMeetingApplyFormIDChanging(int value);
    partial void OnMeetingApplyFormIDChanged();
    #endregion
		
		public MeetingAndUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingAndUserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MeetingAndUserID
		{
			get
			{
				return this._MeetingAndUserID;
			}
			set
			{
				if ((this._MeetingAndUserID != value))
				{
					this.OnMeetingAndUserIDChanging(value);
					this.SendPropertyChanging();
					this._MeetingAndUserID = value;
					this.SendPropertyChanged("MeetingAndUserID");
					this.OnMeetingAndUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingApplyFormID", DbType="Int NOT NULL")]
		public int MeetingApplyFormID
		{
			get
			{
				return this._MeetingApplyFormID;
			}
			set
			{
				if ((this._MeetingApplyFormID != value))
				{
					this.OnMeetingApplyFormIDChanging(value);
					this.SendPropertyChanging();
					this._MeetingApplyFormID = value;
					this.SendPropertyChanged("MeetingApplyFormID");
					this.OnMeetingApplyFormIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MeetingEquipment")]
	public partial class MeetingEquipment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MeetingEquipmentID;
		
		private string _EquipmentName;
		
		private string _EquipmentDescription;
		
		private int _Status;
		
		private int _MeetingEquipmentCount;
		
		private int _MeetingEquipmentFreeCount;
		
		private string _Comments;
		
		private EntitySet<MeetingAndEquipment> _MeetingAndEquipment;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMeetingEquipmentIDChanging(int value);
    partial void OnMeetingEquipmentIDChanged();
    partial void OnEquipmentNameChanging(string value);
    partial void OnEquipmentNameChanged();
    partial void OnEquipmentDescriptionChanging(string value);
    partial void OnEquipmentDescriptionChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnMeetingEquipmentCountChanging(int value);
    partial void OnMeetingEquipmentCountChanged();
    partial void OnMeetingEquipmentFreeCountChanging(int value);
    partial void OnMeetingEquipmentFreeCountChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    #endregion
		
		public MeetingEquipment()
		{
			this._MeetingAndEquipment = new EntitySet<MeetingAndEquipment>(new Action<MeetingAndEquipment>(this.attach_MeetingAndEquipment), new Action<MeetingAndEquipment>(this.detach_MeetingAndEquipment));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingEquipmentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MeetingEquipmentID
		{
			get
			{
				return this._MeetingEquipmentID;
			}
			set
			{
				if ((this._MeetingEquipmentID != value))
				{
					this.OnMeetingEquipmentIDChanging(value);
					this.SendPropertyChanging();
					this._MeetingEquipmentID = value;
					this.SendPropertyChanged("MeetingEquipmentID");
					this.OnMeetingEquipmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentName", DbType="NVarChar(14) NOT NULL", CanBeNull=false)]
		public string EquipmentName
		{
			get
			{
				return this._EquipmentName;
			}
			set
			{
				if ((this._EquipmentName != value))
				{
					this.OnEquipmentNameChanging(value);
					this.SendPropertyChanging();
					this._EquipmentName = value;
					this.SendPropertyChanged("EquipmentName");
					this.OnEquipmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentDescription", DbType="NVarChar(400)")]
		public string EquipmentDescription
		{
			get
			{
				return this._EquipmentDescription;
			}
			set
			{
				if ((this._EquipmentDescription != value))
				{
					this.OnEquipmentDescriptionChanging(value);
					this.SendPropertyChanging();
					this._EquipmentDescription = value;
					this.SendPropertyChanged("EquipmentDescription");
					this.OnEquipmentDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingEquipmentCount", DbType="Int NOT NULL")]
		public int MeetingEquipmentCount
		{
			get
			{
				return this._MeetingEquipmentCount;
			}
			set
			{
				if ((this._MeetingEquipmentCount != value))
				{
					this.OnMeetingEquipmentCountChanging(value);
					this.SendPropertyChanging();
					this._MeetingEquipmentCount = value;
					this.SendPropertyChanged("MeetingEquipmentCount");
					this.OnMeetingEquipmentCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingEquipmentFreeCount", DbType="Int NOT NULL")]
		public int MeetingEquipmentFreeCount
		{
			get
			{
				return this._MeetingEquipmentFreeCount;
			}
			set
			{
				if ((this._MeetingEquipmentFreeCount != value))
				{
					this.OnMeetingEquipmentFreeCountChanging(value);
					this.SendPropertyChanging();
					this._MeetingEquipmentFreeCount = value;
					this.SendPropertyChanged("MeetingEquipmentFreeCount");
					this.OnMeetingEquipmentFreeCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(200)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MeetingEquipment_MeetingAndEquipment", Storage="_MeetingAndEquipment", ThisKey="MeetingEquipmentID", OtherKey="MeetingEquipmentID")]
		public EntitySet<MeetingAndEquipment> MeetingAndEquipment
		{
			get
			{
				return this._MeetingAndEquipment;
			}
			set
			{
				this._MeetingAndEquipment.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MeetingAndEquipment(MeetingAndEquipment entity)
		{
			this.SendPropertyChanging();
			entity.MeetingEquipment = this;
		}
		
		private void detach_MeetingAndEquipment(MeetingAndEquipment entity)
		{
			this.SendPropertyChanging();
			entity.MeetingEquipment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MeetingParticipationMember")]
	public partial class MeetingParticipationMember : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MeetingApplyFormID;
		
		private int _EmployeeNo;
		
		private string _MePartiMemberName;
		
		private EntityRef<MeetingApplyForm> _MeetingApplyForm;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMeetingApplyFormIDChanging(int value);
    partial void OnMeetingApplyFormIDChanged();
    partial void OnEmployeeNoChanging(int value);
    partial void OnEmployeeNoChanged();
    partial void OnMePartiMemberNameChanging(string value);
    partial void OnMePartiMemberNameChanged();
    #endregion
		
		public MeetingParticipationMember()
		{
			this._MeetingApplyForm = default(EntityRef<MeetingApplyForm>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingApplyFormID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MeetingApplyFormID
		{
			get
			{
				return this._MeetingApplyFormID;
			}
			set
			{
				if ((this._MeetingApplyFormID != value))
				{
					if (this._MeetingApplyForm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMeetingApplyFormIDChanging(value);
					this.SendPropertyChanging();
					this._MeetingApplyFormID = value;
					this.SendPropertyChanged("MeetingApplyFormID");
					this.OnMeetingApplyFormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EmployeeNo
		{
			get
			{
				return this._EmployeeNo;
			}
			set
			{
				if ((this._EmployeeNo != value))
				{
					this.OnEmployeeNoChanging(value);
					this.SendPropertyChanging();
					this._EmployeeNo = value;
					this.SendPropertyChanged("EmployeeNo");
					this.OnEmployeeNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MePartiMemberName", DbType="NVarChar(14) NOT NULL", CanBeNull=false)]
		public string MePartiMemberName
		{
			get
			{
				return this._MePartiMemberName;
			}
			set
			{
				if ((this._MePartiMemberName != value))
				{
					this.OnMePartiMemberNameChanging(value);
					this.SendPropertyChanging();
					this._MePartiMemberName = value;
					this.SendPropertyChanged("MePartiMemberName");
					this.OnMePartiMemberNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MeetingApplyForm_MeetingParticipationMember", Storage="_MeetingApplyForm", ThisKey="MeetingApplyFormID", OtherKey="MeetingApplyFormID", IsForeignKey=true)]
		public MeetingApplyForm MeetingApplyForm
		{
			get
			{
				return this._MeetingApplyForm.Entity;
			}
			set
			{
				MeetingApplyForm previousValue = this._MeetingApplyForm.Entity;
				if (((previousValue != value) 
							|| (this._MeetingApplyForm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MeetingApplyForm.Entity = null;
						previousValue.MeetingParticipationMember.Remove(this);
					}
					this._MeetingApplyForm.Entity = value;
					if ((value != null))
					{
						value.MeetingParticipationMember.Add(this);
						this._MeetingApplyFormID = value.MeetingApplyFormID;
					}
					else
					{
						this._MeetingApplyFormID = default(int);
					}
					this.SendPropertyChanged("MeetingApplyForm");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MeetingRoom")]
	public partial class MeetingRoom : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MeetingRoomID;
		
		private string _MeetingRoomName;
		
		private int _MeetingRoomCapacity;
		
		private int _MeetingRoomStatus;
		
		private int _MeetingTypeID;
		
		private EntitySet<MeetingAndRoom> _MeetingAndRoom;
		
		private EntityRef<MeetingType> _MeetingType;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMeetingRoomIDChanging(int value);
    partial void OnMeetingRoomIDChanged();
    partial void OnMeetingRoomNameChanging(string value);
    partial void OnMeetingRoomNameChanged();
    partial void OnMeetingRoomCapacityChanging(int value);
    partial void OnMeetingRoomCapacityChanged();
    partial void OnMeetingRoomStatusChanging(int value);
    partial void OnMeetingRoomStatusChanged();
    partial void OnMeetingTypeIDChanging(int value);
    partial void OnMeetingTypeIDChanged();
    #endregion
		
		public MeetingRoom()
		{
			this._MeetingAndRoom = new EntitySet<MeetingAndRoom>(new Action<MeetingAndRoom>(this.attach_MeetingAndRoom), new Action<MeetingAndRoom>(this.detach_MeetingAndRoom));
			this._MeetingType = default(EntityRef<MeetingType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingRoomID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MeetingRoomID
		{
			get
			{
				return this._MeetingRoomID;
			}
			set
			{
				if ((this._MeetingRoomID != value))
				{
					this.OnMeetingRoomIDChanging(value);
					this.SendPropertyChanging();
					this._MeetingRoomID = value;
					this.SendPropertyChanged("MeetingRoomID");
					this.OnMeetingRoomIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingRoomName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MeetingRoomName
		{
			get
			{
				return this._MeetingRoomName;
			}
			set
			{
				if ((this._MeetingRoomName != value))
				{
					this.OnMeetingRoomNameChanging(value);
					this.SendPropertyChanging();
					this._MeetingRoomName = value;
					this.SendPropertyChanged("MeetingRoomName");
					this.OnMeetingRoomNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingRoomCapacity", DbType="Int NOT NULL")]
		public int MeetingRoomCapacity
		{
			get
			{
				return this._MeetingRoomCapacity;
			}
			set
			{
				if ((this._MeetingRoomCapacity != value))
				{
					this.OnMeetingRoomCapacityChanging(value);
					this.SendPropertyChanging();
					this._MeetingRoomCapacity = value;
					this.SendPropertyChanged("MeetingRoomCapacity");
					this.OnMeetingRoomCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingRoomStatus", DbType="Int NOT NULL")]
		public int MeetingRoomStatus
		{
			get
			{
				return this._MeetingRoomStatus;
			}
			set
			{
				if ((this._MeetingRoomStatus != value))
				{
					this.OnMeetingRoomStatusChanging(value);
					this.SendPropertyChanging();
					this._MeetingRoomStatus = value;
					this.SendPropertyChanged("MeetingRoomStatus");
					this.OnMeetingRoomStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingTypeID", DbType="Int NOT NULL")]
		public int MeetingTypeID
		{
			get
			{
				return this._MeetingTypeID;
			}
			set
			{
				if ((this._MeetingTypeID != value))
				{
					if (this._MeetingType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMeetingTypeIDChanging(value);
					this.SendPropertyChanging();
					this._MeetingTypeID = value;
					this.SendPropertyChanged("MeetingTypeID");
					this.OnMeetingTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MeetingRoom_MeetingAndRoom", Storage="_MeetingAndRoom", ThisKey="MeetingRoomID", OtherKey="MeetingRoomID")]
		public EntitySet<MeetingAndRoom> MeetingAndRoom
		{
			get
			{
				return this._MeetingAndRoom;
			}
			set
			{
				this._MeetingAndRoom.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MeetingType_MeetingRoom", Storage="_MeetingType", ThisKey="MeetingTypeID", OtherKey="MeetingTypeID", IsForeignKey=true)]
		public MeetingType MeetingType
		{
			get
			{
				return this._MeetingType.Entity;
			}
			set
			{
				MeetingType previousValue = this._MeetingType.Entity;
				if (((previousValue != value) 
							|| (this._MeetingType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MeetingType.Entity = null;
						previousValue.MeetingRoom.Remove(this);
					}
					this._MeetingType.Entity = value;
					if ((value != null))
					{
						value.MeetingRoom.Add(this);
						this._MeetingTypeID = value.MeetingTypeID;
					}
					else
					{
						this._MeetingTypeID = default(int);
					}
					this.SendPropertyChanged("MeetingType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MeetingAndRoom(MeetingAndRoom entity)
		{
			this.SendPropertyChanging();
			entity.MeetingRoom = this;
		}
		
		private void detach_MeetingAndRoom(MeetingAndRoom entity)
		{
			this.SendPropertyChanging();
			entity.MeetingRoom = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MeetingType")]
	public partial class MeetingType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MeetingTypeID;
		
		private string _MeetingTypeName;
		
		private string _MeetingTypeDescription;
		
		private EntitySet<MeetingRoom> _MeetingRoom;
		
		private EntitySet<MeetingApplyForm> _MeetingApplyForm;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMeetingTypeIDChanging(int value);
    partial void OnMeetingTypeIDChanged();
    partial void OnMeetingTypeNameChanging(string value);
    partial void OnMeetingTypeNameChanged();
    partial void OnMeetingTypeDescriptionChanging(string value);
    partial void OnMeetingTypeDescriptionChanged();
    #endregion
		
		public MeetingType()
		{
			this._MeetingRoom = new EntitySet<MeetingRoom>(new Action<MeetingRoom>(this.attach_MeetingRoom), new Action<MeetingRoom>(this.detach_MeetingRoom));
			this._MeetingApplyForm = new EntitySet<MeetingApplyForm>(new Action<MeetingApplyForm>(this.attach_MeetingApplyForm), new Action<MeetingApplyForm>(this.detach_MeetingApplyForm));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MeetingTypeID
		{
			get
			{
				return this._MeetingTypeID;
			}
			set
			{
				if ((this._MeetingTypeID != value))
				{
					this.OnMeetingTypeIDChanging(value);
					this.SendPropertyChanging();
					this._MeetingTypeID = value;
					this.SendPropertyChanged("MeetingTypeID");
					this.OnMeetingTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingTypeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MeetingTypeName
		{
			get
			{
				return this._MeetingTypeName;
			}
			set
			{
				if ((this._MeetingTypeName != value))
				{
					this.OnMeetingTypeNameChanging(value);
					this.SendPropertyChanging();
					this._MeetingTypeName = value;
					this.SendPropertyChanged("MeetingTypeName");
					this.OnMeetingTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingTypeDescription", DbType="NVarChar(MAX)")]
		public string MeetingTypeDescription
		{
			get
			{
				return this._MeetingTypeDescription;
			}
			set
			{
				if ((this._MeetingTypeDescription != value))
				{
					this.OnMeetingTypeDescriptionChanging(value);
					this.SendPropertyChanging();
					this._MeetingTypeDescription = value;
					this.SendPropertyChanged("MeetingTypeDescription");
					this.OnMeetingTypeDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MeetingType_MeetingRoom", Storage="_MeetingRoom", ThisKey="MeetingTypeID", OtherKey="MeetingTypeID")]
		public EntitySet<MeetingRoom> MeetingRoom
		{
			get
			{
				return this._MeetingRoom;
			}
			set
			{
				this._MeetingRoom.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MeetingType_MeetingApplyForm", Storage="_MeetingApplyForm", ThisKey="MeetingTypeID", OtherKey="MeetingTypeID")]
		public EntitySet<MeetingApplyForm> MeetingApplyForm
		{
			get
			{
				return this._MeetingApplyForm;
			}
			set
			{
				this._MeetingApplyForm.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MeetingRoom(MeetingRoom entity)
		{
			this.SendPropertyChanging();
			entity.MeetingType = this;
		}
		
		private void detach_MeetingRoom(MeetingRoom entity)
		{
			this.SendPropertyChanging();
			entity.MeetingType = null;
		}
		
		private void attach_MeetingApplyForm(MeetingApplyForm entity)
		{
			this.SendPropertyChanging();
			entity.MeetingType = this;
		}
		
		private void detach_MeetingApplyForm(MeetingApplyForm entity)
		{
			this.SendPropertyChanging();
			entity.MeetingType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MegApplyForm")]
	public partial class MegApplyForm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CarApplyFormID;
		
		private System.Nullable<int> _CarTypeID;
		
		private string _begintDestination;
		
		private string _EndtDestination;
		
		private System.Nullable<System.DateTime> _BeginTime;
		
		private System.Nullable<System.DateTime> _EndTime;
		
		private System.Nullable<int> _WFID;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCarApplyFormIDChanging(int value);
    partial void OnCarApplyFormIDChanged();
    partial void OnCarTypeIDChanging(System.Nullable<int> value);
    partial void OnCarTypeIDChanged();
    partial void OnbegintDestinationChanging(string value);
    partial void OnbegintDestinationChanged();
    partial void OnEndtDestinationChanging(string value);
    partial void OnEndtDestinationChanged();
    partial void OnBeginTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnBeginTimeChanged();
    partial void OnEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEndTimeChanged();
    partial void OnWFIDChanging(System.Nullable<int> value);
    partial void OnWFIDChanged();
    #endregion
		
		public MegApplyForm()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarApplyFormID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CarApplyFormID
		{
			get
			{
				return this._CarApplyFormID;
			}
			set
			{
				if ((this._CarApplyFormID != value))
				{
					this.OnCarApplyFormIDChanging(value);
					this.SendPropertyChanging();
					this._CarApplyFormID = value;
					this.SendPropertyChanged("CarApplyFormID");
					this.OnCarApplyFormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarTypeID", DbType="Int")]
		public System.Nullable<int> CarTypeID
		{
			get
			{
				return this._CarTypeID;
			}
			set
			{
				if ((this._CarTypeID != value))
				{
					this.OnCarTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CarTypeID = value;
					this.SendPropertyChanged("CarTypeID");
					this.OnCarTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_begintDestination", DbType="VarChar(50)")]
		public string begintDestination
		{
			get
			{
				return this._begintDestination;
			}
			set
			{
				if ((this._begintDestination != value))
				{
					this.OnbegintDestinationChanging(value);
					this.SendPropertyChanging();
					this._begintDestination = value;
					this.SendPropertyChanged("begintDestination");
					this.OnbegintDestinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndtDestination", DbType="VarChar(50)")]
		public string EndtDestination
		{
			get
			{
				return this._EndtDestination;
			}
			set
			{
				if ((this._EndtDestination != value))
				{
					this.OnEndtDestinationChanging(value);
					this.SendPropertyChanging();
					this._EndtDestination = value;
					this.SendPropertyChanged("EndtDestination");
					this.OnEndtDestinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeginTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> BeginTime
		{
			get
			{
				return this._BeginTime;
			}
			set
			{
				if ((this._BeginTime != value))
				{
					this.OnBeginTimeChanging(value);
					this.SendPropertyChanging();
					this._BeginTime = value;
					this.SendPropertyChanged("BeginTime");
					this.OnBeginTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFID", DbType="Int")]
		public System.Nullable<int> WFID
		{
			get
			{
				return this._WFID;
			}
			set
			{
				if ((this._WFID != value))
				{
					this.OnWFIDChanging(value);
					this.SendPropertyChanging();
					this._WFID = value;
					this.SendPropertyChanged("WFID");
					this.OnWFIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReviewAutoApply")]
	public partial class ReviewAutoApply : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RiviewAutoApplyID;
		
		private int _AutomobileUseFormID;
		
		private string _ReviewUserName;
		
		private int _Agree;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRiviewAutoApplyIDChanging(int value);
    partial void OnRiviewAutoApplyIDChanged();
    partial void OnAutomobileUseFormIDChanging(int value);
    partial void OnAutomobileUseFormIDChanged();
    partial void OnReviewUserNameChanging(string value);
    partial void OnReviewUserNameChanged();
    partial void OnAgreeChanging(int value);
    partial void OnAgreeChanged();
    #endregion
		
		public ReviewAutoApply()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiviewAutoApplyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RiviewAutoApplyID
		{
			get
			{
				return this._RiviewAutoApplyID;
			}
			set
			{
				if ((this._RiviewAutoApplyID != value))
				{
					this.OnRiviewAutoApplyIDChanging(value);
					this.SendPropertyChanging();
					this._RiviewAutoApplyID = value;
					this.SendPropertyChanged("RiviewAutoApplyID");
					this.OnRiviewAutoApplyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutomobileUseFormID", DbType="Int NOT NULL")]
		public int AutomobileUseFormID
		{
			get
			{
				return this._AutomobileUseFormID;
			}
			set
			{
				if ((this._AutomobileUseFormID != value))
				{
					this.OnAutomobileUseFormIDChanging(value);
					this.SendPropertyChanging();
					this._AutomobileUseFormID = value;
					this.SendPropertyChanged("AutomobileUseFormID");
					this.OnAutomobileUseFormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReviewUserName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string ReviewUserName
		{
			get
			{
				return this._ReviewUserName;
			}
			set
			{
				if ((this._ReviewUserName != value))
				{
					this.OnReviewUserNameChanging(value);
					this.SendPropertyChanging();
					this._ReviewUserName = value;
					this.SendPropertyChanged("ReviewUserName");
					this.OnReviewUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Agree", DbType="Int NOT NULL")]
		public int Agree
		{
			get
			{
				return this._Agree;
			}
			set
			{
				if ((this._Agree != value))
				{
					this.OnAgreeChanging(value);
					this.SendPropertyChanging();
					this._Agree = value;
					this.SendPropertyChanged("Agree");
					this.OnAgreeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReviewMeetingApply")]
	public partial class ReviewMeetingApply : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReviewMeetingApplyID;
		
		private int _MeetingApplyFormID;
		
		private string _ReviewUserName;
		
		private System.Nullable<int> _Agree;
		
		private EntityRef<MeetingApplyForm> _MeetingApplyForm;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReviewMeetingApplyIDChanging(int value);
    partial void OnReviewMeetingApplyIDChanged();
    partial void OnMeetingApplyFormIDChanging(int value);
    partial void OnMeetingApplyFormIDChanged();
    partial void OnReviewUserNameChanging(string value);
    partial void OnReviewUserNameChanged();
    partial void OnAgreeChanging(System.Nullable<int> value);
    partial void OnAgreeChanged();
    #endregion
		
		public ReviewMeetingApply()
		{
			this._MeetingApplyForm = default(EntityRef<MeetingApplyForm>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReviewMeetingApplyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ReviewMeetingApplyID
		{
			get
			{
				return this._ReviewMeetingApplyID;
			}
			set
			{
				if ((this._ReviewMeetingApplyID != value))
				{
					this.OnReviewMeetingApplyIDChanging(value);
					this.SendPropertyChanging();
					this._ReviewMeetingApplyID = value;
					this.SendPropertyChanged("ReviewMeetingApplyID");
					this.OnReviewMeetingApplyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingApplyFormID", DbType="Int NOT NULL")]
		public int MeetingApplyFormID
		{
			get
			{
				return this._MeetingApplyFormID;
			}
			set
			{
				if ((this._MeetingApplyFormID != value))
				{
					if (this._MeetingApplyForm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMeetingApplyFormIDChanging(value);
					this.SendPropertyChanging();
					this._MeetingApplyFormID = value;
					this.SendPropertyChanged("MeetingApplyFormID");
					this.OnMeetingApplyFormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReviewUserName", DbType="NVarChar(20)")]
		public string ReviewUserName
		{
			get
			{
				return this._ReviewUserName;
			}
			set
			{
				if ((this._ReviewUserName != value))
				{
					this.OnReviewUserNameChanging(value);
					this.SendPropertyChanging();
					this._ReviewUserName = value;
					this.SendPropertyChanged("ReviewUserName");
					this.OnReviewUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Agree", DbType="Int")]
		public System.Nullable<int> Agree
		{
			get
			{
				return this._Agree;
			}
			set
			{
				if ((this._Agree != value))
				{
					this.OnAgreeChanging(value);
					this.SendPropertyChanging();
					this._Agree = value;
					this.SendPropertyChanged("Agree");
					this.OnAgreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MeetingApplyForm_ReviewMeetingApply", Storage="_MeetingApplyForm", ThisKey="MeetingApplyFormID", OtherKey="MeetingApplyFormID", IsForeignKey=true)]
		public MeetingApplyForm MeetingApplyForm
		{
			get
			{
				return this._MeetingApplyForm.Entity;
			}
			set
			{
				MeetingApplyForm previousValue = this._MeetingApplyForm.Entity;
				if (((previousValue != value) 
							|| (this._MeetingApplyForm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MeetingApplyForm.Entity = null;
						previousValue.ReviewMeetingApply.Remove(this);
					}
					this._MeetingApplyForm.Entity = value;
					if ((value != null))
					{
						value.ReviewMeetingApply.Add(this);
						this._MeetingApplyFormID = value.MeetingApplyFormID;
					}
					else
					{
						this._MeetingApplyFormID = default(int);
					}
					this.SendPropertyChanged("MeetingApplyForm");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReviewUseCarApply")]
	public partial class ReviewUseCarApply : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReviewUseCarApplyID;
		
		private int _UseCarApplyFormID;
		
		private string _ReviewUserName;
		
		private int _Agree;
		
		private EntityRef<UseCarApplyForm> _UseCarApplyForm;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReviewUseCarApplyIDChanging(int value);
    partial void OnReviewUseCarApplyIDChanged();
    partial void OnUseCarApplyFormIDChanging(int value);
    partial void OnUseCarApplyFormIDChanged();
    partial void OnReviewUserNameChanging(string value);
    partial void OnReviewUserNameChanged();
    partial void OnAgreeChanging(int value);
    partial void OnAgreeChanged();
    #endregion
		
		public ReviewUseCarApply()
		{
			this._UseCarApplyForm = default(EntityRef<UseCarApplyForm>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReviewUseCarApplyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ReviewUseCarApplyID
		{
			get
			{
				return this._ReviewUseCarApplyID;
			}
			set
			{
				if ((this._ReviewUseCarApplyID != value))
				{
					this.OnReviewUseCarApplyIDChanging(value);
					this.SendPropertyChanging();
					this._ReviewUseCarApplyID = value;
					this.SendPropertyChanged("ReviewUseCarApplyID");
					this.OnReviewUseCarApplyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseCarApplyFormID", DbType="Int NOT NULL")]
		public int UseCarApplyFormID
		{
			get
			{
				return this._UseCarApplyFormID;
			}
			set
			{
				if ((this._UseCarApplyFormID != value))
				{
					if (this._UseCarApplyForm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUseCarApplyFormIDChanging(value);
					this.SendPropertyChanging();
					this._UseCarApplyFormID = value;
					this.SendPropertyChanged("UseCarApplyFormID");
					this.OnUseCarApplyFormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReviewUserName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ReviewUserName
		{
			get
			{
				return this._ReviewUserName;
			}
			set
			{
				if ((this._ReviewUserName != value))
				{
					this.OnReviewUserNameChanging(value);
					this.SendPropertyChanging();
					this._ReviewUserName = value;
					this.SendPropertyChanged("ReviewUserName");
					this.OnReviewUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Agree", DbType="Int NOT NULL")]
		public int Agree
		{
			get
			{
				return this._Agree;
			}
			set
			{
				if ((this._Agree != value))
				{
					this.OnAgreeChanging(value);
					this.SendPropertyChanging();
					this._Agree = value;
					this.SendPropertyChanged("Agree");
					this.OnAgreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UseCarApplyForm_ReviewUseCarApply", Storage="_UseCarApplyForm", ThisKey="UseCarApplyFormID", OtherKey="UseCarApplyFormID", IsForeignKey=true)]
		public UseCarApplyForm UseCarApplyForm
		{
			get
			{
				return this._UseCarApplyForm.Entity;
			}
			set
			{
				UseCarApplyForm previousValue = this._UseCarApplyForm.Entity;
				if (((previousValue != value) 
							|| (this._UseCarApplyForm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UseCarApplyForm.Entity = null;
						previousValue.ReviewUseCarApply.Remove(this);
					}
					this._UseCarApplyForm.Entity = value;
					if ((value != null))
					{
						value.ReviewUseCarApply.Add(this);
						this._UseCarApplyFormID = value.UseCarApplyFormID;
					}
					else
					{
						this._UseCarApplyFormID = default(int);
					}
					this.SendPropertyChanged("UseCarApplyForm");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UseCarAndUser")]
	public partial class UseCarAndUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UseCarUserId;
		
		private int _UseCarApplyFormID;
		
		private string _Name;
		
		private string _Email;
		
		private EntityRef<UseCarApplyForm> _UseCarApplyForm;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUseCarUserIdChanging(int value);
    partial void OnUseCarUserIdChanged();
    partial void OnUseCarApplyFormIDChanging(int value);
    partial void OnUseCarApplyFormIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public UseCarAndUser()
		{
			this._UseCarApplyForm = default(EntityRef<UseCarApplyForm>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseCarUserId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UseCarUserId
		{
			get
			{
				return this._UseCarUserId;
			}
			set
			{
				if ((this._UseCarUserId != value))
				{
					this.OnUseCarUserIdChanging(value);
					this.SendPropertyChanging();
					this._UseCarUserId = value;
					this.SendPropertyChanged("UseCarUserId");
					this.OnUseCarUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseCarApplyFormID", DbType="Int NOT NULL")]
		public int UseCarApplyFormID
		{
			get
			{
				return this._UseCarApplyFormID;
			}
			set
			{
				if ((this._UseCarApplyFormID != value))
				{
					if (this._UseCarApplyForm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUseCarApplyFormIDChanging(value);
					this.SendPropertyChanging();
					this._UseCarApplyFormID = value;
					this.SendPropertyChanged("UseCarApplyFormID");
					this.OnUseCarApplyFormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UseCarApplyForm_UseCarAndUser", Storage="_UseCarApplyForm", ThisKey="UseCarApplyFormID", OtherKey="UseCarApplyFormID", IsForeignKey=true)]
		public UseCarApplyForm UseCarApplyForm
		{
			get
			{
				return this._UseCarApplyForm.Entity;
			}
			set
			{
				UseCarApplyForm previousValue = this._UseCarApplyForm.Entity;
				if (((previousValue != value) 
							|| (this._UseCarApplyForm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UseCarApplyForm.Entity = null;
						previousValue.UseCarAndUser.Remove(this);
					}
					this._UseCarApplyForm.Entity = value;
					if ((value != null))
					{
						value.UseCarAndUser.Add(this);
						this._UseCarApplyFormID = value.UseCarApplyFormID;
					}
					else
					{
						this._UseCarApplyFormID = default(int);
					}
					this.SendPropertyChanged("UseCarApplyForm");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UseCarApplyForm")]
	public partial class UseCarApplyForm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UseCarApplyFormID;
		
		private string _ApplyUserName;
		
		private int _UseCarTypeID;
		
		private System.DateTime _BeginTime;
		
		private System.DateTime _EndTime;
		
		private string _StartDestination;
		
		private string _EndDestination;
		
		private int _ApplyStatus;
		
		private System.Guid _WFID;
		
		private string _ApplyReason;
		
		private string _Comment;
		
		private EntitySet<ArchiveUserCarApply> _ArchiveUserCarApply;
		
		private EntitySet<ReviewUseCarApply> _ReviewUseCarApply;
		
		private EntitySet<UseCarAndUser> _UseCarAndUser;
		
		private EntityRef<UseCarType> _UseCarType;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUseCarApplyFormIDChanging(int value);
    partial void OnUseCarApplyFormIDChanged();
    partial void OnApplyUserNameChanging(string value);
    partial void OnApplyUserNameChanged();
    partial void OnUseCarTypeIDChanging(int value);
    partial void OnUseCarTypeIDChanged();
    partial void OnBeginTimeChanging(System.DateTime value);
    partial void OnBeginTimeChanged();
    partial void OnEndTimeChanging(System.DateTime value);
    partial void OnEndTimeChanged();
    partial void OnStartDestinationChanging(string value);
    partial void OnStartDestinationChanged();
    partial void OnEndDestinationChanging(string value);
    partial void OnEndDestinationChanged();
    partial void OnApplyStatusChanging(int value);
    partial void OnApplyStatusChanged();
    partial void OnWFIDChanging(System.Guid value);
    partial void OnWFIDChanged();
    partial void OnApplyReasonChanging(string value);
    partial void OnApplyReasonChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public UseCarApplyForm()
		{
			this._ArchiveUserCarApply = new EntitySet<ArchiveUserCarApply>(new Action<ArchiveUserCarApply>(this.attach_ArchiveUserCarApply), new Action<ArchiveUserCarApply>(this.detach_ArchiveUserCarApply));
			this._ReviewUseCarApply = new EntitySet<ReviewUseCarApply>(new Action<ReviewUseCarApply>(this.attach_ReviewUseCarApply), new Action<ReviewUseCarApply>(this.detach_ReviewUseCarApply));
			this._UseCarAndUser = new EntitySet<UseCarAndUser>(new Action<UseCarAndUser>(this.attach_UseCarAndUser), new Action<UseCarAndUser>(this.detach_UseCarAndUser));
			this._UseCarType = default(EntityRef<UseCarType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseCarApplyFormID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UseCarApplyFormID
		{
			get
			{
				return this._UseCarApplyFormID;
			}
			set
			{
				if ((this._UseCarApplyFormID != value))
				{
					this.OnUseCarApplyFormIDChanging(value);
					this.SendPropertyChanging();
					this._UseCarApplyFormID = value;
					this.SendPropertyChanged("UseCarApplyFormID");
					this.OnUseCarApplyFormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyUserName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ApplyUserName
		{
			get
			{
				return this._ApplyUserName;
			}
			set
			{
				if ((this._ApplyUserName != value))
				{
					this.OnApplyUserNameChanging(value);
					this.SendPropertyChanging();
					this._ApplyUserName = value;
					this.SendPropertyChanged("ApplyUserName");
					this.OnApplyUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseCarTypeID", DbType="Int NOT NULL")]
		public int UseCarTypeID
		{
			get
			{
				return this._UseCarTypeID;
			}
			set
			{
				if ((this._UseCarTypeID != value))
				{
					if (this._UseCarType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUseCarTypeIDChanging(value);
					this.SendPropertyChanging();
					this._UseCarTypeID = value;
					this.SendPropertyChanged("UseCarTypeID");
					this.OnUseCarTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeginTime", DbType="DateTime NOT NULL")]
		public System.DateTime BeginTime
		{
			get
			{
				return this._BeginTime;
			}
			set
			{
				if ((this._BeginTime != value))
				{
					this.OnBeginTimeChanging(value);
					this.SendPropertyChanging();
					this._BeginTime = value;
					this.SendPropertyChanged("BeginTime");
					this.OnBeginTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDestination", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string StartDestination
		{
			get
			{
				return this._StartDestination;
			}
			set
			{
				if ((this._StartDestination != value))
				{
					this.OnStartDestinationChanging(value);
					this.SendPropertyChanging();
					this._StartDestination = value;
					this.SendPropertyChanged("StartDestination");
					this.OnStartDestinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDestination", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string EndDestination
		{
			get
			{
				return this._EndDestination;
			}
			set
			{
				if ((this._EndDestination != value))
				{
					this.OnEndDestinationChanging(value);
					this.SendPropertyChanging();
					this._EndDestination = value;
					this.SendPropertyChanged("EndDestination");
					this.OnEndDestinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyStatus", DbType="Int NOT NULL")]
		public int ApplyStatus
		{
			get
			{
				return this._ApplyStatus;
			}
			set
			{
				if ((this._ApplyStatus != value))
				{
					this.OnApplyStatusChanging(value);
					this.SendPropertyChanging();
					this._ApplyStatus = value;
					this.SendPropertyChanged("ApplyStatus");
					this.OnApplyStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid WFID
		{
			get
			{
				return this._WFID;
			}
			set
			{
				if ((this._WFID != value))
				{
					this.OnWFIDChanging(value);
					this.SendPropertyChanging();
					this._WFID = value;
					this.SendPropertyChanged("WFID");
					this.OnWFIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyReason", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string ApplyReason
		{
			get
			{
				return this._ApplyReason;
			}
			set
			{
				if ((this._ApplyReason != value))
				{
					this.OnApplyReasonChanging(value);
					this.SendPropertyChanging();
					this._ApplyReason = value;
					this.SendPropertyChanged("ApplyReason");
					this.OnApplyReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(200)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UseCarApplyForm_ArchiveUserCarApply", Storage="_ArchiveUserCarApply", ThisKey="UseCarApplyFormID", OtherKey="UseCarApplyFormID")]
		public EntitySet<ArchiveUserCarApply> ArchiveUserCarApply
		{
			get
			{
				return this._ArchiveUserCarApply;
			}
			set
			{
				this._ArchiveUserCarApply.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UseCarApplyForm_ReviewUseCarApply", Storage="_ReviewUseCarApply", ThisKey="UseCarApplyFormID", OtherKey="UseCarApplyFormID")]
		public EntitySet<ReviewUseCarApply> ReviewUseCarApply
		{
			get
			{
				return this._ReviewUseCarApply;
			}
			set
			{
				this._ReviewUseCarApply.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UseCarApplyForm_UseCarAndUser", Storage="_UseCarAndUser", ThisKey="UseCarApplyFormID", OtherKey="UseCarApplyFormID")]
		public EntitySet<UseCarAndUser> UseCarAndUser
		{
			get
			{
				return this._UseCarAndUser;
			}
			set
			{
				this._UseCarAndUser.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UseCarType_UseCarApplyForm", Storage="_UseCarType", ThisKey="UseCarTypeID", OtherKey="UseCarTypeID", IsForeignKey=true)]
		public UseCarType UseCarType
		{
			get
			{
				return this._UseCarType.Entity;
			}
			set
			{
				UseCarType previousValue = this._UseCarType.Entity;
				if (((previousValue != value) 
							|| (this._UseCarType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UseCarType.Entity = null;
						previousValue.UseCarApplyForm.Remove(this);
					}
					this._UseCarType.Entity = value;
					if ((value != null))
					{
						value.UseCarApplyForm.Add(this);
						this._UseCarTypeID = value.UseCarTypeID;
					}
					else
					{
						this._UseCarTypeID = default(int);
					}
					this.SendPropertyChanged("UseCarType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ArchiveUserCarApply(ArchiveUserCarApply entity)
		{
			this.SendPropertyChanging();
			entity.UseCarApplyForm = this;
		}
		
		private void detach_ArchiveUserCarApply(ArchiveUserCarApply entity)
		{
			this.SendPropertyChanging();
			entity.UseCarApplyForm = null;
		}
		
		private void attach_ReviewUseCarApply(ReviewUseCarApply entity)
		{
			this.SendPropertyChanging();
			entity.UseCarApplyForm = this;
		}
		
		private void detach_ReviewUseCarApply(ReviewUseCarApply entity)
		{
			this.SendPropertyChanging();
			entity.UseCarApplyForm = null;
		}
		
		private void attach_UseCarAndUser(UseCarAndUser entity)
		{
			this.SendPropertyChanging();
			entity.UseCarApplyForm = this;
		}
		
		private void detach_UseCarAndUser(UseCarAndUser entity)
		{
			this.SendPropertyChanging();
			entity.UseCarApplyForm = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UseCarType")]
	public partial class UseCarType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UseCarTypeID;
		
		private string _UseCarTypeName;
		
		private EntitySet<Car> _Car;
		
		private EntitySet<UseCarApplyForm> _UseCarApplyForm;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUseCarTypeIDChanging(int value);
    partial void OnUseCarTypeIDChanged();
    partial void OnUseCarTypeNameChanging(string value);
    partial void OnUseCarTypeNameChanged();
    #endregion
		
		public UseCarType()
		{
			this._Car = new EntitySet<Car>(new Action<Car>(this.attach_Car), new Action<Car>(this.detach_Car));
			this._UseCarApplyForm = new EntitySet<UseCarApplyForm>(new Action<UseCarApplyForm>(this.attach_UseCarApplyForm), new Action<UseCarApplyForm>(this.detach_UseCarApplyForm));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseCarTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UseCarTypeID
		{
			get
			{
				return this._UseCarTypeID;
			}
			set
			{
				if ((this._UseCarTypeID != value))
				{
					this.OnUseCarTypeIDChanging(value);
					this.SendPropertyChanging();
					this._UseCarTypeID = value;
					this.SendPropertyChanged("UseCarTypeID");
					this.OnUseCarTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseCarTypeName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string UseCarTypeName
		{
			get
			{
				return this._UseCarTypeName;
			}
			set
			{
				if ((this._UseCarTypeName != value))
				{
					this.OnUseCarTypeNameChanging(value);
					this.SendPropertyChanging();
					this._UseCarTypeName = value;
					this.SendPropertyChanged("UseCarTypeName");
					this.OnUseCarTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UseCarType_Car", Storage="_Car", ThisKey="UseCarTypeID", OtherKey="UseCarTypeID")]
		public EntitySet<Car> Car
		{
			get
			{
				return this._Car;
			}
			set
			{
				this._Car.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UseCarType_UseCarApplyForm", Storage="_UseCarApplyForm", ThisKey="UseCarTypeID", OtherKey="UseCarTypeID")]
		public EntitySet<UseCarApplyForm> UseCarApplyForm
		{
			get
			{
				return this._UseCarApplyForm;
			}
			set
			{
				this._UseCarApplyForm.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Car(Car entity)
		{
			this.SendPropertyChanging();
			entity.UseCarType = this;
		}
		
		private void detach_Car(Car entity)
		{
			this.SendPropertyChanging();
			entity.UseCarType = null;
		}
		
		private void attach_UseCarApplyForm(UseCarApplyForm entity)
		{
			this.SendPropertyChanging();
			entity.UseCarType = this;
		}
		
		private void detach_UseCarApplyForm(UseCarApplyForm entity)
		{
			this.SendPropertyChanging();
			entity.UseCarType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WFT_Acts")]
	public partial class WFT_Acts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _FromAct;
		
		private System.Guid _ToAct;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFromActChanging(System.Guid value);
    partial void OnFromActChanged();
    partial void OnToActChanging(System.Guid value);
    partial void OnToActChanged();
    #endregion
		
		public WFT_Acts()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromAct", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid FromAct
		{
			get
			{
				return this._FromAct;
			}
			set
			{
				if ((this._FromAct != value))
				{
					this.OnFromActChanging(value);
					this.SendPropertyChanging();
					this._FromAct = value;
					this.SendPropertyChanged("FromAct");
					this.OnFromActChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToAct", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ToAct
		{
			get
			{
				return this._ToAct;
			}
			set
			{
				if ((this._ToAct != value))
				{
					this.OnToActChanging(value);
					this.SendPropertyChanging();
					this._ToAct = value;
					this.SendPropertyChanged("ToAct");
					this.OnToActChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WFTActivities")]
	public partial class WFTActivities
	{
		
		private System.Guid _ActID;
		
		private string _ActName;
		
		private System.Nullable<System.Guid> _WFTID;
		
		private string _Owners;
		
		public WFTActivities()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ActID
		{
			get
			{
				return this._ActID;
			}
			set
			{
				if ((this._ActID != value))
				{
					this._ActID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActName", DbType="NVarChar(50)")]
		public string ActName
		{
			get
			{
				return this._ActName;
			}
			set
			{
				if ((this._ActName != value))
				{
					this._ActName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFTID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> WFTID
		{
			get
			{
				return this._WFTID;
			}
			set
			{
				if ((this._WFTID != value))
				{
					this._WFTID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owners", DbType="NVarChar(200)")]
		public string Owners
		{
			get
			{
				return this._Owners;
			}
			set
			{
				if ((this._Owners != value))
				{
					this._Owners = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkFlow_Acts")]
	public partial class WorkFlow_Acts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _FromAct;
		
		private System.Guid _ToAct;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFromActChanging(System.Guid value);
    partial void OnFromActChanged();
    partial void OnToActChanging(System.Guid value);
    partial void OnToActChanged();
    #endregion
		
		public WorkFlow_Acts()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromAct", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid FromAct
		{
			get
			{
				return this._FromAct;
			}
			set
			{
				if ((this._FromAct != value))
				{
					this.OnFromActChanging(value);
					this.SendPropertyChanging();
					this._FromAct = value;
					this.SendPropertyChanged("FromAct");
					this.OnFromActChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToAct", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ToAct
		{
			get
			{
				return this._ToAct;
			}
			set
			{
				if ((this._ToAct != value))
				{
					this.OnToActChanging(value);
					this.SendPropertyChanging();
					this._ToAct = value;
					this.SendPropertyChanged("ToAct");
					this.OnToActChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Workflows")]
	public partial class Workflows : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _WFID;
		
		private System.Guid _WFTID;
		
		private string _WFName;
		
		private System.Nullable<int> _Status;
		
		private EntitySet<MeetingApplyForm> _MeetingApplyForm;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWFIDChanging(System.Guid value);
    partial void OnWFIDChanged();
    partial void OnWFTIDChanging(System.Guid value);
    partial void OnWFTIDChanged();
    partial void OnWFNameChanging(string value);
    partial void OnWFNameChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    #endregion
		
		public Workflows()
		{
			this._MeetingApplyForm = new EntitySet<MeetingApplyForm>(new Action<MeetingApplyForm>(this.attach_MeetingApplyForm), new Action<MeetingApplyForm>(this.detach_MeetingApplyForm));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid WFID
		{
			get
			{
				return this._WFID;
			}
			set
			{
				if ((this._WFID != value))
				{
					this.OnWFIDChanging(value);
					this.SendPropertyChanging();
					this._WFID = value;
					this.SendPropertyChanged("WFID");
					this.OnWFIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFTID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid WFTID
		{
			get
			{
				return this._WFTID;
			}
			set
			{
				if ((this._WFTID != value))
				{
					this.OnWFTIDChanging(value);
					this.SendPropertyChanging();
					this._WFTID = value;
					this.SendPropertyChanged("WFTID");
					this.OnWFTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFName", DbType="NVarChar(50)")]
		public string WFName
		{
			get
			{
				return this._WFName;
			}
			set
			{
				if ((this._WFName != value))
				{
					this.OnWFNameChanging(value);
					this.SendPropertyChanging();
					this._WFName = value;
					this.SendPropertyChanged("WFName");
					this.OnWFNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Workflows_MeetingApplyForm", Storage="_MeetingApplyForm", ThisKey="WFID", OtherKey="WFID")]
		public EntitySet<MeetingApplyForm> MeetingApplyForm
		{
			get
			{
				return this._MeetingApplyForm;
			}
			set
			{
				this._MeetingApplyForm.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MeetingApplyForm(MeetingApplyForm entity)
		{
			this.SendPropertyChanging();
			entity.Workflows = this;
		}
		
		private void detach_MeetingApplyForm(MeetingApplyForm entity)
		{
			this.SendPropertyChanging();
			entity.Workflows = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MeetingApplyForm")]
	public partial class MeetingApplyForm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MeetingApplyFormID;
		
		private string _ApplyUserName;
		
		private int _MeetingTypeID;
		
		private string _MeetingTopic;
		
		private string _MeetingIntroduction;
		
		private System.DateTime _BeginTime;
		
		private System.DateTime _EndTime;
		
		private int _MeetingStatus;
		
		private System.Guid _WFID;
		
		private string _Comments;
		
		private EntitySet<ArchiveMeeting> _ArchiveMeeting;
		
		private EntitySet<MeetingAndEquipment> _MeetingAndEquipment;
		
		private EntitySet<MeetingAndRoom> _MeetingAndRoom;
		
		private EntitySet<MeetingParticipationMember> _MeetingParticipationMember;
		
		private EntitySet<ReviewMeetingApply> _ReviewMeetingApply;
		
		private EntityRef<MeetingType> _MeetingType;
		
		private EntityRef<Workflows> _Workflows;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMeetingApplyFormIDChanging(int value);
    partial void OnMeetingApplyFormIDChanged();
    partial void OnApplyUserNameChanging(string value);
    partial void OnApplyUserNameChanged();
    partial void OnMeetingTypeIDChanging(int value);
    partial void OnMeetingTypeIDChanged();
    partial void OnMeetingTopicChanging(string value);
    partial void OnMeetingTopicChanged();
    partial void OnMeetingIntroductionChanging(string value);
    partial void OnMeetingIntroductionChanged();
    partial void OnBeginTimeChanging(System.DateTime value);
    partial void OnBeginTimeChanged();
    partial void OnEndTimeChanging(System.DateTime value);
    partial void OnEndTimeChanged();
    partial void OnMeetingStatusChanging(int value);
    partial void OnMeetingStatusChanged();
    partial void OnWFIDChanging(System.Guid value);
    partial void OnWFIDChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    #endregion
		
		public MeetingApplyForm()
		{
			this._ArchiveMeeting = new EntitySet<ArchiveMeeting>(new Action<ArchiveMeeting>(this.attach_ArchiveMeeting), new Action<ArchiveMeeting>(this.detach_ArchiveMeeting));
			this._MeetingAndEquipment = new EntitySet<MeetingAndEquipment>(new Action<MeetingAndEquipment>(this.attach_MeetingAndEquipment), new Action<MeetingAndEquipment>(this.detach_MeetingAndEquipment));
			this._MeetingAndRoom = new EntitySet<MeetingAndRoom>(new Action<MeetingAndRoom>(this.attach_MeetingAndRoom), new Action<MeetingAndRoom>(this.detach_MeetingAndRoom));
			this._MeetingParticipationMember = new EntitySet<MeetingParticipationMember>(new Action<MeetingParticipationMember>(this.attach_MeetingParticipationMember), new Action<MeetingParticipationMember>(this.detach_MeetingParticipationMember));
			this._ReviewMeetingApply = new EntitySet<ReviewMeetingApply>(new Action<ReviewMeetingApply>(this.attach_ReviewMeetingApply), new Action<ReviewMeetingApply>(this.detach_ReviewMeetingApply));
			this._MeetingType = default(EntityRef<MeetingType>);
			this._Workflows = default(EntityRef<Workflows>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingApplyFormID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MeetingApplyFormID
		{
			get
			{
				return this._MeetingApplyFormID;
			}
			set
			{
				if ((this._MeetingApplyFormID != value))
				{
					this.OnMeetingApplyFormIDChanging(value);
					this.SendPropertyChanging();
					this._MeetingApplyFormID = value;
					this.SendPropertyChanged("MeetingApplyFormID");
					this.OnMeetingApplyFormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyUserName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ApplyUserName
		{
			get
			{
				return this._ApplyUserName;
			}
			set
			{
				if ((this._ApplyUserName != value))
				{
					this.OnApplyUserNameChanging(value);
					this.SendPropertyChanging();
					this._ApplyUserName = value;
					this.SendPropertyChanged("ApplyUserName");
					this.OnApplyUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingTypeID", DbType="Int NOT NULL")]
		public int MeetingTypeID
		{
			get
			{
				return this._MeetingTypeID;
			}
			set
			{
				if ((this._MeetingTypeID != value))
				{
					if (this._MeetingType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMeetingTypeIDChanging(value);
					this.SendPropertyChanging();
					this._MeetingTypeID = value;
					this.SendPropertyChanged("MeetingTypeID");
					this.OnMeetingTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingTopic", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string MeetingTopic
		{
			get
			{
				return this._MeetingTopic;
			}
			set
			{
				if ((this._MeetingTopic != value))
				{
					this.OnMeetingTopicChanging(value);
					this.SendPropertyChanging();
					this._MeetingTopic = value;
					this.SendPropertyChanged("MeetingTopic");
					this.OnMeetingTopicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingIntroduction", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string MeetingIntroduction
		{
			get
			{
				return this._MeetingIntroduction;
			}
			set
			{
				if ((this._MeetingIntroduction != value))
				{
					this.OnMeetingIntroductionChanging(value);
					this.SendPropertyChanging();
					this._MeetingIntroduction = value;
					this.SendPropertyChanged("MeetingIntroduction");
					this.OnMeetingIntroductionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeginTime", DbType="DateTime NOT NULL")]
		public System.DateTime BeginTime
		{
			get
			{
				return this._BeginTime;
			}
			set
			{
				if ((this._BeginTime != value))
				{
					this.OnBeginTimeChanging(value);
					this.SendPropertyChanging();
					this._BeginTime = value;
					this.SendPropertyChanged("BeginTime");
					this.OnBeginTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingStatus", DbType="Int NOT NULL")]
		public int MeetingStatus
		{
			get
			{
				return this._MeetingStatus;
			}
			set
			{
				if ((this._MeetingStatus != value))
				{
					this.OnMeetingStatusChanging(value);
					this.SendPropertyChanging();
					this._MeetingStatus = value;
					this.SendPropertyChanged("MeetingStatus");
					this.OnMeetingStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid WFID
		{
			get
			{
				return this._WFID;
			}
			set
			{
				if ((this._WFID != value))
				{
					if (this._Workflows.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWFIDChanging(value);
					this.SendPropertyChanging();
					this._WFID = value;
					this.SendPropertyChanged("WFID");
					this.OnWFIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MeetingApplyForm_ArchiveMeeting", Storage="_ArchiveMeeting", ThisKey="MeetingApplyFormID", OtherKey="MeetingApplyFormID")]
		public EntitySet<ArchiveMeeting> ArchiveMeeting
		{
			get
			{
				return this._ArchiveMeeting;
			}
			set
			{
				this._ArchiveMeeting.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MeetingApplyForm_MeetingAndEquipment", Storage="_MeetingAndEquipment", ThisKey="MeetingApplyFormID", OtherKey="MeetingApplyFormID")]
		public EntitySet<MeetingAndEquipment> MeetingAndEquipment
		{
			get
			{
				return this._MeetingAndEquipment;
			}
			set
			{
				this._MeetingAndEquipment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MeetingApplyForm_MeetingAndRoom", Storage="_MeetingAndRoom", ThisKey="MeetingApplyFormID", OtherKey="MeetingApplyFormID")]
		public EntitySet<MeetingAndRoom> MeetingAndRoom
		{
			get
			{
				return this._MeetingAndRoom;
			}
			set
			{
				this._MeetingAndRoom.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MeetingApplyForm_MeetingParticipationMember", Storage="_MeetingParticipationMember", ThisKey="MeetingApplyFormID", OtherKey="MeetingApplyFormID")]
		public EntitySet<MeetingParticipationMember> MeetingParticipationMember
		{
			get
			{
				return this._MeetingParticipationMember;
			}
			set
			{
				this._MeetingParticipationMember.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MeetingApplyForm_ReviewMeetingApply", Storage="_ReviewMeetingApply", ThisKey="MeetingApplyFormID", OtherKey="MeetingApplyFormID")]
		public EntitySet<ReviewMeetingApply> ReviewMeetingApply
		{
			get
			{
				return this._ReviewMeetingApply;
			}
			set
			{
				this._ReviewMeetingApply.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MeetingType_MeetingApplyForm", Storage="_MeetingType", ThisKey="MeetingTypeID", OtherKey="MeetingTypeID", IsForeignKey=true)]
		public MeetingType MeetingType
		{
			get
			{
				return this._MeetingType.Entity;
			}
			set
			{
				MeetingType previousValue = this._MeetingType.Entity;
				if (((previousValue != value) 
							|| (this._MeetingType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MeetingType.Entity = null;
						previousValue.MeetingApplyForm.Remove(this);
					}
					this._MeetingType.Entity = value;
					if ((value != null))
					{
						value.MeetingApplyForm.Add(this);
						this._MeetingTypeID = value.MeetingTypeID;
					}
					else
					{
						this._MeetingTypeID = default(int);
					}
					this.SendPropertyChanged("MeetingType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Workflows_MeetingApplyForm", Storage="_Workflows", ThisKey="WFID", OtherKey="WFID", IsForeignKey=true)]
		public Workflows Workflows
		{
			get
			{
				return this._Workflows.Entity;
			}
			set
			{
				Workflows previousValue = this._Workflows.Entity;
				if (((previousValue != value) 
							|| (this._Workflows.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Workflows.Entity = null;
						previousValue.MeetingApplyForm.Remove(this);
					}
					this._Workflows.Entity = value;
					if ((value != null))
					{
						value.MeetingApplyForm.Add(this);
						this._WFID = value.WFID;
					}
					else
					{
						this._WFID = default(System.Guid);
					}
					this.SendPropertyChanged("Workflows");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ArchiveMeeting(ArchiveMeeting entity)
		{
			this.SendPropertyChanging();
			entity.MeetingApplyForm = this;
		}
		
		private void detach_ArchiveMeeting(ArchiveMeeting entity)
		{
			this.SendPropertyChanging();
			entity.MeetingApplyForm = null;
		}
		
		private void attach_MeetingAndEquipment(MeetingAndEquipment entity)
		{
			this.SendPropertyChanging();
			entity.MeetingApplyForm = this;
		}
		
		private void detach_MeetingAndEquipment(MeetingAndEquipment entity)
		{
			this.SendPropertyChanging();
			entity.MeetingApplyForm = null;
		}
		
		private void attach_MeetingAndRoom(MeetingAndRoom entity)
		{
			this.SendPropertyChanging();
			entity.MeetingApplyForm = this;
		}
		
		private void detach_MeetingAndRoom(MeetingAndRoom entity)
		{
			this.SendPropertyChanging();
			entity.MeetingApplyForm = null;
		}
		
		private void attach_MeetingParticipationMember(MeetingParticipationMember entity)
		{
			this.SendPropertyChanging();
			entity.MeetingApplyForm = this;
		}
		
		private void detach_MeetingParticipationMember(MeetingParticipationMember entity)
		{
			this.SendPropertyChanging();
			entity.MeetingApplyForm = null;
		}
		
		private void attach_ReviewMeetingApply(ReviewMeetingApply entity)
		{
			this.SendPropertyChanging();
			entity.MeetingApplyForm = this;
		}
		
		private void detach_ReviewMeetingApply(ReviewMeetingApply entity)
		{
			this.SendPropertyChanging();
			entity.MeetingApplyForm = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Document")]
	public partial class Document : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocumentID;
		
		private string _DocumentName;
		
		private int _Status;
		
		private string _DocumentPath;
		
		private System.Guid _WFID;
		
		private string _DocumentAuthor;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocumentIDChanging(int value);
    partial void OnDocumentIDChanged();
    partial void OnDocumentNameChanging(string value);
    partial void OnDocumentNameChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnDocumentPathChanging(string value);
    partial void OnDocumentPathChanged();
    partial void OnWFIDChanging(System.Guid value);
    partial void OnWFIDChanged();
    partial void OnDocumentAuthorChanging(string value);
    partial void OnDocumentAuthorChanged();
    #endregion
		
		public Document()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DocumentID
		{
			get
			{
				return this._DocumentID;
			}
			set
			{
				if ((this._DocumentID != value))
				{
					this.OnDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentID = value;
					this.SendPropertyChanged("DocumentID");
					this.OnDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DocumentName
		{
			get
			{
				return this._DocumentName;
			}
			set
			{
				if ((this._DocumentName != value))
				{
					this.OnDocumentNameChanging(value);
					this.SendPropertyChanging();
					this._DocumentName = value;
					this.SendPropertyChanged("DocumentName");
					this.OnDocumentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentPath", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string DocumentPath
		{
			get
			{
				return this._DocumentPath;
			}
			set
			{
				if ((this._DocumentPath != value))
				{
					this.OnDocumentPathChanging(value);
					this.SendPropertyChanging();
					this._DocumentPath = value;
					this.SendPropertyChanged("DocumentPath");
					this.OnDocumentPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WFID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid WFID
		{
			get
			{
				return this._WFID;
			}
			set
			{
				if ((this._WFID != value))
				{
					this.OnWFIDChanging(value);
					this.SendPropertyChanging();
					this._WFID = value;
					this.SendPropertyChanged("WFID");
					this.OnWFIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentAuthor", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DocumentAuthor
		{
			get
			{
				return this._DocumentAuthor;
			}
			set
			{
				if ((this._DocumentAuthor != value))
				{
					this.OnDocumentAuthorChanging(value);
					this.SendPropertyChanging();
					this._DocumentAuthor = value;
					this.SendPropertyChanged("DocumentAuthor");
					this.OnDocumentAuthorChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
