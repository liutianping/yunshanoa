//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.235
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------


namespace YunShanOA.Workflow.Meeting {
    
    
    [System.Runtime.InteropServices.ComVisible(false)]
    public partial class MeetingApply : System.Activities.Activity, System.ComponentModel.ISupportInitialize {
        
        private bool _contentLoaded;
        
        private System.Activities.InArgument<YunShanOA.Model.Meeting> _Request;
        
        private System.Activities.InArgument<System.Collections.Generic.Dictionary<int, int>> _EquipmentCount;
        
        private System.Activities.InArgument<System.Collections.Generic.Dictionary<string, string>> _MeetingUserEmailFrom;
        
        private System.Activities.InArgument<YunShanOA.Model.MeetingRoom> _MeetingRoomIDAndName;
        
        private System.Activities.InArgument<int> _Arg_ArrEquipmentResult;
        
        public MeetingApply() {
            this.InitializeComponent();
        }
        
        public System.Activities.InArgument<YunShanOA.Model.Meeting> Request {
            get {
                return this._Request;
            }
            set {
                this._Request = value;
            }
        }
        
        public System.Activities.InArgument<System.Collections.Generic.Dictionary<int, int>> EquipmentCount {
            get {
                return this._EquipmentCount;
            }
            set {
                this._EquipmentCount = value;
            }
        }
        
        public System.Activities.InArgument<System.Collections.Generic.Dictionary<string, string>> MeetingUserEmailFrom {
            get {
                return this._MeetingUserEmailFrom;
            }
            set {
                this._MeetingUserEmailFrom = value;
            }
        }
        
        public System.Activities.InArgument<YunShanOA.Model.MeetingRoom> MeetingRoomIDAndName {
            get {
                return this._MeetingRoomIDAndName;
            }
            set {
                this._MeetingRoomIDAndName = value;
            }
        }
        
        public System.Activities.InArgument<int> Arg_ArrEquipmentResult {
            get {
                return this._Arg_ArrEquipmentResult;
            }
            set {
                this._Arg_ArrEquipmentResult = value;
            }
        }
        
        /// <summary>
        /// InitializeComponent
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void InitializeComponent() {
            if ((this._contentLoaded == true)) {
                return;
            }
            this._contentLoaded = true;
            string resourceName = this.FindResource();
            System.IO.Stream initializeXaml = typeof(MeetingApply).Assembly.GetManifestResourceStream(resourceName);
            System.Xml.XmlReader xmlReader = null;
            System.Xaml.XamlReader reader = null;
            System.Xaml.XamlObjectWriter objectWriter = null;
            try {
                System.Xaml.XamlSchemaContext schemaContext = XamlStaticHelperNamespace._XamlStaticHelper.SchemaContext;
                xmlReader = System.Xml.XmlReader.Create(initializeXaml);
                System.Xaml.XamlXmlReaderSettings readerSettings = new System.Xaml.XamlXmlReaderSettings();
                readerSettings.LocalAssembly = System.Reflection.Assembly.GetExecutingAssembly();
                readerSettings.AllowProtectedMembersOnRoot = true;
                reader = new System.Xaml.XamlXmlReader(xmlReader, schemaContext, readerSettings);
                System.Xaml.XamlObjectWriterSettings writerSettings = new System.Xaml.XamlObjectWriterSettings();
                writerSettings.RootObjectInstance = this;
                writerSettings.AccessLevel = System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(typeof(MeetingApply));
                objectWriter = new System.Xaml.XamlObjectWriter(schemaContext, writerSettings);
                System.Xaml.XamlServices.Transform(reader, objectWriter);
            }
            finally {
                if ((xmlReader != null)) {
                    ((System.IDisposable)(xmlReader)).Dispose();
                }
                if ((reader != null)) {
                    ((System.IDisposable)(reader)).Dispose();
                }
                if ((objectWriter != null)) {
                    ((System.IDisposable)(objectWriter)).Dispose();
                }
            }
        }
        
        private string FindResource() {
            string[] resources = typeof(MeetingApply).Assembly.GetManifestResourceNames();
            for (int i = 0; (i < resources.Length); i = (i + 1)) {
                string resource = resources[i];
                if ((resource.Contains(".MeetingApply.g.xaml") || resource.Equals("MeetingApply.g.xaml"))) {
                    return resource;
                }
            }
            throw new System.InvalidOperationException("Resource not found.");
        }
        
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033")]
        void System.ComponentModel.ISupportInitialize.BeginInit() {
        }
        
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033")]
        void System.ComponentModel.ISupportInitialize.EndInit() {
            this.InitializeComponent();
        }
    }
}
